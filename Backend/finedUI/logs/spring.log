2023-04-05 17:35:05.152  INFO 247772 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 247772 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-05 17:35:05.153  INFO 247772 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-05 17:35:05.187  INFO 247772 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-05 17:35:05.187  INFO 247772 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-05 17:35:05.973  INFO 247772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-05 17:35:05.973  INFO 247772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-05 17:35:06.068  INFO 247772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 88 ms. Found 5 JPA repository interfaces.
2023-04-05 17:35:06.078  INFO 247772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-05 17:35:06.079  INFO 247772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-05 17:35:06.101  INFO 247772 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-05 17:35:06.101  INFO 247772 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-05 17:35:06.101  INFO 247772 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-05 17:35:06.101  INFO 247772 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-05 17:35:06.102  INFO 247772 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-05 17:35:06.102  INFO 247772 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2023-04-05 17:35:06.362  INFO 247772 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#67be231' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-05 17:35:06.362  INFO 247772 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#2ef73bbd' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-05 17:35:06.368  INFO 247772 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#325fff87' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-05 17:35:06.369  INFO 247772 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-05 17:35:06.369  INFO 247772 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-05 17:35:06.563  INFO 247772 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-05 17:35:06.570  INFO 247772 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-05 17:35:06.570  INFO 247772 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-05 17:35:06.653  INFO 247772 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-05 17:35:06.653  INFO 247772 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1465 ms
2023-04-05 17:35:06.782  INFO 247772 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-05 17:35:06.815  INFO 247772 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-05 17:35:06.906  INFO 247772 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-05 17:35:06.969  INFO 247772 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-05 17:35:07.148  INFO 247772 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-05 17:35:07.156  INFO 247772 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-05 17:35:07.691  INFO 247772 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-05 17:35:07.704  INFO 247772 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-05 17:35:08.144  WARN 247772 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-05 17:35:08.828  WARN 247772 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-05 17:35:08.829  INFO 247772 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-05 17:35:08.829  WARN 247772 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-05 17:35:08.829  INFO 247772 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-05 17:35:08.829  WARN 247772 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-05 17:35:08.829  INFO 247772 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-05 17:35:08.861 DEBUG 247772 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-05 17:35:08.867 DEBUG 247772 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-05 17:35:08.874  INFO 247772 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@56de4d2e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f911ea7, org.springframework.security.web.context.SecurityContextPersistenceFilter@38146414, org.springframework.security.web.header.HeaderWriterFilter@689e0c38, org.springframework.security.web.authentication.logout.LogoutFilter@17affe87, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@111a92f2, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@863d8b4, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@4de54c3d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@207543d9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@91636fd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a27c232, org.springframework.security.web.session.SessionManagementFilter@5c9459a0, org.springframework.security.web.access.ExceptionTranslationFilter@19d0f1dd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@10489bc8]
2023-04-05 17:35:08.936  INFO 247772 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-05 17:35:09.158  INFO 247772 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-05 17:35:09.340  INFO 247772 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 4.522 seconds (JVM running for 5.428)
2023-04-05 17:35:11.943  INFO 247772 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-05 17:35:11.946  INFO 247772 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-05 17:35:11.950  INFO 247772 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 10:08:22.913  INFO 254212 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 254212 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 10:08:22.914  INFO 254212 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 10:08:22.948  INFO 254212 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 10:08:22.948  INFO 254212 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 10:08:23.686  INFO 254212 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:08:23.686  INFO 254212 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 10:08:23.784  INFO 254212 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 92 ms. Found 5 JPA repository interfaces.
2023-04-06 10:08:23.794  INFO 254212 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:08:23.795  INFO 254212 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 10:08:23.816  INFO 254212 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:08:23.816  INFO 254212 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:08:23.816  INFO 254212 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:08:23.817  INFO 254212 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:08:23.817  INFO 254212 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:08:23.817  INFO 254212 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2023-04-06 10:08:24.075  INFO 254212 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#47fd1dd3' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:08:24.076  INFO 254212 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#2ff2be4f' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:08:24.081  INFO 254212 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#34c5930' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:08:24.083  INFO 254212 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:08:24.083  INFO 254212 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:08:24.279  INFO 254212 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 10:08:24.287  INFO 254212 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 10:08:24.287  INFO 254212 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 10:08:24.363  INFO 254212 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 10:08:24.363  INFO 254212 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1414 ms
2023-04-06 10:08:24.480  INFO 254212 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 10:08:24.510  INFO 254212 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 10:08:24.601  INFO 254212 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 10:08:24.662  INFO 254212 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 10:08:24.787  INFO 254212 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 10:08:24.797  INFO 254212 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 10:08:25.310  INFO 254212 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 10:08:25.320  INFO 254212 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:08:25.730  WARN 254212 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 10:08:26.453  WARN 254212 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:08:26.455  INFO 254212 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 10:08:26.455  WARN 254212 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:08:26.455  INFO 254212 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 10:08:26.455  WARN 254212 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:08:26.455  INFO 254212 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 10:08:26.483 DEBUG 254212 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 10:08:26.488 DEBUG 254212 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 10:08:26.496  INFO 254212 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7b31d453, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d0fecbc, org.springframework.security.web.context.SecurityContextPersistenceFilter@16f635fb, org.springframework.security.web.header.HeaderWriterFilter@72c5f6e5, org.springframework.security.web.authentication.logout.LogoutFilter@3aec3936, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2936ae57, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@511f6b60, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@58fbaa30, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@432b911c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@554c46a2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d2c0035, org.springframework.security.web.session.SessionManagementFilter@4ee66719, org.springframework.security.web.access.ExceptionTranslationFilter@642e5d1f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@71f5cf2f]
2023-04-06 10:08:26.569  INFO 254212 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 10:08:26.803  INFO 254212 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 10:08:27.025  INFO 254212 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 4.447 seconds (JVM running for 5.336)
2023-04-06 10:08:28.310  INFO 254212 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 10:08:28.311  INFO 254212 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 10:08:28.312  INFO 254212 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 10:08:28.317 DEBUG 254212 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 10:08:28.320 DEBUG 254212 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 10:08:28.321  INFO 254212 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 10:08:28.346  INFO 254212 --- [http-nio-8080-exec-1] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 10
2023-04-06 10:08:28.351 DEBUG 254212 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 10:08:28.352 DEBUG 254212 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 10:08:28.686 DEBUG 254212 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:08:28.763 DEBUG 254212 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 10:08:28.827 DEBUG 254212 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:08:28.844 DEBUG 254212 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:08:28.852 DEBUG 254212 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:08:28.889 ERROR 254212 --- [http-nio-8080-exec-1] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 10:08:28.917 DEBUG 254212 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 10:08:31.210 DEBUG 254212 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 10:08:31.210 DEBUG 254212 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 10:08:31.211  INFO 254212 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 10:08:31.213  INFO 254212 --- [http-nio-8080-exec-4] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 10
2023-04-06 10:08:31.213 DEBUG 254212 --- [http-nio-8080-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 10:08:31.213 DEBUG 254212 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 10:08:31.275 DEBUG 254212 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:08:31.283 DEBUG 254212 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 10:08:31.305 DEBUG 254212 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:08:31.311 DEBUG 254212 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:08:31.317 DEBUG 254212 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:08:31.341 DEBUG 254212 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 10:08:31.652 DEBUG 254212 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 10:09:03.714  INFO 254212 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:09:03.717  INFO 254212 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 10:09:03.721  INFO 254212 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 10:09:07.802  INFO 251816 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 251816 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 10:09:07.803  INFO 251816 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 10:09:07.836  INFO 251816 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 10:09:07.836  INFO 251816 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 10:09:08.643  INFO 251816 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:09:08.644  INFO 251816 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 10:09:08.747  INFO 251816 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 97 ms. Found 5 JPA repository interfaces.
2023-04-06 10:09:08.758  INFO 251816 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:09:08.759  INFO 251816 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 10:09:08.781  INFO 251816 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:09:08.781  INFO 251816 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:09:08.781  INFO 251816 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:09:08.782  INFO 251816 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:09:08.782  INFO 251816 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:09:08.782  INFO 251816 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2023-04-06 10:09:09.059  INFO 251816 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#bbe3edc' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:09:09.060  INFO 251816 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#65b02d03' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:09:09.065  INFO 251816 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#1fca1c45' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:09:09.067  INFO 251816 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:09:09.067  INFO 251816 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:09:09.248  INFO 251816 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 10:09:09.254  INFO 251816 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 10:09:09.254  INFO 251816 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 10:09:09.330  INFO 251816 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 10:09:09.330  INFO 251816 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1494 ms
2023-04-06 10:09:09.451  INFO 251816 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 10:09:09.482  INFO 251816 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 10:09:09.594  INFO 251816 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 10:09:09.664  INFO 251816 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 10:09:09.834  INFO 251816 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 10:09:09.847  INFO 251816 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 10:09:10.797  INFO 251816 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 10:09:10.805  INFO 251816 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:09:11.381  WARN 251816 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 10:09:12.295  WARN 251816 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:09:12.296  INFO 251816 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 10:09:12.296  WARN 251816 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:09:12.296  INFO 251816 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 10:09:12.296  WARN 251816 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:09:12.296  INFO 251816 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 10:09:12.322 DEBUG 251816 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 10:09:12.326 DEBUG 251816 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 10:09:12.332  INFO 251816 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@24eb4f95, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7daddbc7, org.springframework.security.web.context.SecurityContextPersistenceFilter@69384b30, org.springframework.security.web.header.HeaderWriterFilter@3a2fcce0, org.springframework.security.web.authentication.logout.LogoutFilter@6b991ecc, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@3c93b4a7, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@545ad91d, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@150457d9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e28130f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@321b1642, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@18b17f10, org.springframework.security.web.session.SessionManagementFilter@74fbdd2, org.springframework.security.web.access.ExceptionTranslationFilter@65c8c6eb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f227406]
2023-04-06 10:09:12.410  INFO 251816 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 10:09:12.669  INFO 251816 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 10:09:12.918  INFO 251816 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 5.443 seconds (JVM running for 6.309)
2023-04-06 10:09:37.944  INFO 251816 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 10:09:37.944  INFO 251816 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 10:09:37.946  INFO 251816 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 10:09:37.951 DEBUG 251816 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 10:09:37.955 DEBUG 251816 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 10:09:37.957  INFO 251816 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 10:09:37.985  INFO 251816 --- [http-nio-8080-exec-1] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 10
2023-04-06 10:09:37.992 DEBUG 251816 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 10:09:37.992 DEBUG 251816 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 10:09:38.084 DEBUG 251816 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:09:38.144 DEBUG 251816 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 10:09:38.175 DEBUG 251816 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:09:38.184 DEBUG 251816 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:09:38.198 DEBUG 251816 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:09:38.242 ERROR 251816 --- [http-nio-8080-exec-1] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 10:09:38.282 DEBUG 251816 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 10:10:06.019  INFO 251816 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:10:06.021  INFO 251816 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 10:10:06.026  INFO 251816 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 10:10:09.488  INFO 254468 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 254468 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 10:10:09.489  INFO 254468 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 10:10:09.523  INFO 254468 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 10:10:09.523  INFO 254468 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 10:10:10.335  INFO 254468 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:10:10.336  INFO 254468 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 10:10:10.434  INFO 254468 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 93 ms. Found 5 JPA repository interfaces.
2023-04-06 10:10:10.443  INFO 254468 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:10:10.444  INFO 254468 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 10:10:10.465  INFO 254468 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:10:10.465  INFO 254468 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:10:10.465  INFO 254468 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:10:10.466  INFO 254468 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:10:10.466  INFO 254468 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:10:10.466  INFO 254468 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2023-04-06 10:10:10.717  INFO 254468 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#27ca0850' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:10:10.718  INFO 254468 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#27efea63' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:10:10.723  INFO 254468 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#725f80f1' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:10:10.724  INFO 254468 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:10:10.724  INFO 254468 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:10:10.907  INFO 254468 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 10:10:10.912  INFO 254468 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 10:10:10.913  INFO 254468 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 10:10:10.988  INFO 254468 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 10:10:10.989  INFO 254468 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1465 ms
2023-04-06 10:10:11.109  INFO 254468 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 10:10:11.136  INFO 254468 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 10:10:11.223  INFO 254468 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 10:10:11.284  INFO 254468 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 10:10:11.461  INFO 254468 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 10:10:11.469  INFO 254468 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 10:10:11.975  INFO 254468 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 10:10:11.984  INFO 254468 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:10:12.383  WARN 254468 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 10:10:13.035  WARN 254468 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:10:13.036  INFO 254468 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 10:10:13.036  WARN 254468 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:10:13.036  INFO 254468 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 10:10:13.036  WARN 254468 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:10:13.036  INFO 254468 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 10:10:13.062 DEBUG 254468 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 10:10:13.067 DEBUG 254468 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 10:10:13.074  INFO 254468 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@fb5cebe, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5141f30, org.springframework.security.web.context.SecurityContextPersistenceFilter@4e281109, org.springframework.security.web.header.HeaderWriterFilter@764ebcd5, org.springframework.security.web.authentication.logout.LogoutFilter@330c3bf5, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@771cec22, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@21ccb642, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@6381caeb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11490d0c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30c98a6a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a959cc6, org.springframework.security.web.session.SessionManagementFilter@6e02f863, org.springframework.security.web.access.ExceptionTranslationFilter@25f28d9c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6e7da8a0]
2023-04-06 10:10:13.136  INFO 254468 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 10:10:13.382  INFO 254468 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 10:10:13.636  INFO 254468 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 4.478 seconds (JVM running for 5.382)
2023-04-06 10:10:15.411  INFO 254468 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 10:10:15.412  INFO 254468 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 10:10:15.413  INFO 254468 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 10:10:15.419 DEBUG 254468 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 10:10:15.423 DEBUG 254468 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 10:10:15.424  INFO 254468 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 10:10:15.450  INFO 254468 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 10
2023-04-06 10:10:15.457 DEBUG 254468 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 10:10:15.458 DEBUG 254468 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 10:10:15.547 DEBUG 254468 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:10:15.593 DEBUG 254468 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 10:10:15.629 DEBUG 254468 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:10:15.637 DEBUG 254468 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:10:15.649 DEBUG 254468 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:10:15.683 ERROR 254468 --- [http-nio-8080-exec-2] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 10:10:15.715 DEBUG 254468 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 10:10:33.964  INFO 254468 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:10:33.968  INFO 254468 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 10:10:33.972  INFO 254468 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 10:10:37.417  INFO 252612 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 252612 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 10:10:37.418  INFO 252612 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 10:10:37.452  INFO 252612 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 10:10:37.453  INFO 252612 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 10:10:38.197  INFO 252612 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:10:38.198  INFO 252612 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 10:10:38.295  INFO 252612 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 91 ms. Found 5 JPA repository interfaces.
2023-04-06 10:10:38.304  INFO 252612 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:10:38.305  INFO 252612 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 10:10:38.327  INFO 252612 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:10:38.327  INFO 252612 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:10:38.327  INFO 252612 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:10:38.328  INFO 252612 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:10:38.328  INFO 252612 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:10:38.328  INFO 252612 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2023-04-06 10:10:38.581  INFO 252612 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#47e581c5' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:10:38.582  INFO 252612 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#bdb4e76' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:10:38.587  INFO 252612 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#5c54fab8' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:10:38.588  INFO 252612 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:10:38.588  INFO 252612 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:10:38.777  INFO 252612 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 10:10:38.784  INFO 252612 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 10:10:38.784  INFO 252612 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 10:10:38.860  INFO 252612 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 10:10:38.860  INFO 252612 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1407 ms
2023-04-06 10:10:38.978  INFO 252612 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 10:10:39.006  INFO 252612 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 10:10:39.098  INFO 252612 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 10:10:39.157  INFO 252612 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 10:10:39.298  INFO 252612 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 10:10:39.307  INFO 252612 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 10:10:39.973  INFO 252612 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 10:10:39.983  INFO 252612 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:10:40.375  WARN 252612 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 10:10:41.022  WARN 252612 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:10:41.023  INFO 252612 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 10:10:41.023  WARN 252612 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:10:41.023  INFO 252612 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 10:10:41.023  WARN 252612 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:10:41.023  INFO 252612 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 10:10:41.049 DEBUG 252612 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 10:10:41.053 DEBUG 252612 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 10:10:41.060  INFO 252612 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5d8065a7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2bd248dc, org.springframework.security.web.context.SecurityContextPersistenceFilter@5df0c9de, org.springframework.security.web.header.HeaderWriterFilter@5b73886c, org.springframework.security.web.authentication.logout.LogoutFilter@bc10e63, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2ac86bd4, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@164c2292, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@73b97a3b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c1e0296, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4708af2f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e3a07e6, org.springframework.security.web.session.SessionManagementFilter@4e45eb96, org.springframework.security.web.access.ExceptionTranslationFilter@40b3b88f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4b37290]
2023-04-06 10:10:41.133  INFO 252612 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 10:10:41.354  INFO 252612 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 10:10:41.641  INFO 252612 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 4.544 seconds (JVM running for 5.415)
2023-04-06 10:10:43.236  INFO 252612 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 10:10:43.237  INFO 252612 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 10:10:43.239  INFO 252612 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 10:10:43.244 DEBUG 252612 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 10:10:43.247 DEBUG 252612 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 10:10:43.248  INFO 252612 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 10:10:43.275  INFO 252612 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 10
2023-04-06 10:10:43.281 DEBUG 252612 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 10:10:43.281 DEBUG 252612 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 10:10:43.397 DEBUG 252612 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:10:43.693 DEBUG 252612 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 10:10:43.789 DEBUG 252612 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:10:43.808 DEBUG 252612 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:10:43.827 DEBUG 252612 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:10:43.893 DEBUG 252612 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 10:10:44.029 DEBUG 252612 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 10:11:16.034  INFO 252612 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:11:16.036  INFO 252612 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 10:11:16.041  INFO 252612 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 10:11:19.493  INFO 248068 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 248068 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 10:11:19.494  INFO 248068 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 10:11:19.527  INFO 248068 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 10:11:19.528  INFO 248068 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 10:11:20.287  INFO 248068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:11:20.287  INFO 248068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 10:11:20.389  INFO 248068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 92 ms. Found 5 JPA repository interfaces.
2023-04-06 10:11:20.399  INFO 248068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:11:20.400  INFO 248068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 10:11:20.421  INFO 248068 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:11:20.421  INFO 248068 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:11:20.421  INFO 248068 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:11:20.422  INFO 248068 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:11:20.422  INFO 248068 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:11:20.422  INFO 248068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2023-04-06 10:11:20.677  INFO 248068 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#66a2a1ab' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:11:20.678  INFO 248068 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#12649bd1' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:11:20.683  INFO 248068 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#6cf47e1f' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:11:20.685  INFO 248068 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:11:20.685  INFO 248068 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:11:20.866  INFO 248068 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 10:11:20.872  INFO 248068 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 10:11:20.872  INFO 248068 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 10:11:20.948  INFO 248068 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 10:11:20.948  INFO 248068 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1420 ms
2023-04-06 10:11:21.064  INFO 248068 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 10:11:21.091  INFO 248068 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 10:11:21.181  INFO 248068 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 10:11:21.241  INFO 248068 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 10:11:21.384  INFO 248068 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 10:11:21.393  INFO 248068 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 10:11:21.909  INFO 248068 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 10:11:21.921  INFO 248068 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:11:22.322  WARN 248068 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 10:11:22.971  WARN 248068 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:11:22.972  INFO 248068 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 10:11:22.972  WARN 248068 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:11:22.972  INFO 248068 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 10:11:22.972  WARN 248068 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:11:22.972  INFO 248068 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 10:11:22.996 DEBUG 248068 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 10:11:23.000 DEBUG 248068 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 10:11:23.007  INFO 248068 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@16dae79, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24dad3ba, org.springframework.security.web.context.SecurityContextPersistenceFilter@462b652b, org.springframework.security.web.header.HeaderWriterFilter@b7d39bb, org.springframework.security.web.authentication.logout.LogoutFilter@679a0676, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@12de9448, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@1fdf73b4, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@4bbae438, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c0e7bce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3d17d752, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b5e4ff3, org.springframework.security.web.session.SessionManagementFilter@6681fd1b, org.springframework.security.web.access.ExceptionTranslationFilter@4d716ec2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11d9711]
2023-04-06 10:11:23.064  INFO 248068 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 10:11:23.277  INFO 248068 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 10:11:23.485  INFO 248068 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 4.313 seconds (JVM running for 5.163)
2023-04-06 10:11:26.834  INFO 248068 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 10:11:26.836  INFO 248068 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 10:11:26.837  INFO 248068 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 10:11:26.842 DEBUG 248068 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 10:11:26.847 DEBUG 248068 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 10:11:26.848  INFO 248068 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 10:11:26.875  INFO 248068 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 10
2023-04-06 10:11:26.881 DEBUG 248068 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 10:11:26.882 DEBUG 248068 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 10:11:26.972 DEBUG 248068 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:11:27.021 DEBUG 248068 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 10:11:27.054 DEBUG 248068 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:11:27.061 DEBUG 248068 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:11:27.070 DEBUG 248068 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:11:27.100 ERROR 248068 --- [http-nio-8080-exec-2] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 10:11:27.129 DEBUG 248068 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 10:12:12.160  INFO 248068 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:12:12.163  INFO 248068 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 10:12:12.167  INFO 248068 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 10:12:16.181  INFO 251716 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 251716 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 10:12:16.182  INFO 251716 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 10:12:16.222  INFO 251716 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 10:12:16.222  INFO 251716 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 10:12:16.984  INFO 251716 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:12:16.984  INFO 251716 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 10:12:17.076  INFO 251716 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 87 ms. Found 5 JPA repository interfaces.
2023-04-06 10:12:17.087  INFO 251716 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:12:17.088  INFO 251716 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 10:12:17.109  INFO 251716 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:12:17.110  INFO 251716 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:12:17.110  INFO 251716 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:12:17.111  INFO 251716 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:12:17.111  INFO 251716 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:12:17.111  INFO 251716 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2023-04-06 10:12:17.371  INFO 251716 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#efdfa35' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:12:17.372  INFO 251716 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#4ad50495' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:12:17.378  INFO 251716 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#34019076' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:12:17.380  INFO 251716 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:12:17.380  INFO 251716 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:12:17.570  INFO 251716 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 10:12:17.577  INFO 251716 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 10:12:17.578  INFO 251716 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 10:12:17.655  INFO 251716 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 10:12:17.656  INFO 251716 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1434 ms
2023-04-06 10:12:17.769  INFO 251716 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 10:12:17.798  INFO 251716 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 10:12:17.893  INFO 251716 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 10:12:17.953  INFO 251716 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 10:12:18.180  INFO 251716 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 10:12:18.191  INFO 251716 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 10:12:18.955  INFO 251716 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 10:12:18.973  INFO 251716 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:12:19.502  WARN 251716 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 10:12:20.464  WARN 251716 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:12:20.465  INFO 251716 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 10:12:20.466  WARN 251716 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:12:20.467  INFO 251716 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 10:12:20.467  WARN 251716 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:12:20.467  INFO 251716 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 10:12:20.497 DEBUG 251716 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 10:12:20.502 DEBUG 251716 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 10:12:20.510  INFO 251716 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@697ca053, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30a0a064, org.springframework.security.web.context.SecurityContextPersistenceFilter@2f429409, org.springframework.security.web.header.HeaderWriterFilter@63e9a40b, org.springframework.security.web.authentication.logout.LogoutFilter@4ec401f9, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@137d1d6b, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@47fa1a7, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@67483ca1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43c029c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8c4a7d1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@fbc7229, org.springframework.security.web.session.SessionManagementFilter@5a251dbe, org.springframework.security.web.access.ExceptionTranslationFilter@2c0b3d0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@226d1913]
2023-04-06 10:12:20.585  INFO 251716 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 10:12:20.880  INFO 251716 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 10:12:21.149  INFO 251716 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 5.289 seconds (JVM running for 6.136)
2023-04-06 10:12:22.161  INFO 251716 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 10:12:22.161  INFO 251716 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 10:12:22.162  INFO 251716 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 10:12:22.169 DEBUG 251716 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 10:12:22.173 DEBUG 251716 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 10:12:22.173  INFO 251716 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 10:12:22.211  INFO 251716 --- [http-nio-8080-exec-1] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 10
2023-04-06 10:12:22.216 DEBUG 251716 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 10:12:22.217 DEBUG 251716 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 10:12:22.320 DEBUG 251716 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:12:22.360 DEBUG 251716 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 10:12:22.412 DEBUG 251716 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:12:22.429 DEBUG 251716 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:12:22.446 DEBUG 251716 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:12:22.714 ERROR 251716 --- [http-nio-8080-exec-1] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 10:12:22.739 DEBUG 251716 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 10:13:01.284  INFO 251716 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:13:01.287  INFO 251716 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 10:13:01.292  INFO 251716 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 10:13:04.873  INFO 252548 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 252548 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 10:13:04.873  INFO 252548 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 10:13:04.906  INFO 252548 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 10:13:04.906  INFO 252548 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 10:13:05.662  INFO 252548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:13:05.662  INFO 252548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 10:13:05.754  INFO 252548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 86 ms. Found 5 JPA repository interfaces.
2023-04-06 10:13:05.764  INFO 252548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:13:05.765  INFO 252548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 10:13:05.787  INFO 252548 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:13:05.788  INFO 252548 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:13:05.788  INFO 252548 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:13:05.788  INFO 252548 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:13:05.788  INFO 252548 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:13:05.789  INFO 252548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2023-04-06 10:13:06.038  INFO 252548 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#13396b17' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:13:06.039  INFO 252548 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#944048d' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:13:06.044  INFO 252548 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#38f2c5e9' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:13:06.045  INFO 252548 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:13:06.045  INFO 252548 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:13:06.229  INFO 252548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 10:13:06.236  INFO 252548 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 10:13:06.237  INFO 252548 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 10:13:06.314  INFO 252548 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 10:13:06.314  INFO 252548 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1408 ms
2023-04-06 10:13:06.437  INFO 252548 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 10:13:06.464  INFO 252548 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 10:13:06.550  INFO 252548 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 10:13:06.611  INFO 252548 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 10:13:06.797  INFO 252548 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 10:13:06.808  INFO 252548 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 10:13:07.590  INFO 252548 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 10:13:07.610  INFO 252548 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:13:08.141  WARN 252548 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 10:13:09.084  WARN 252548 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:13:09.085  INFO 252548 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 10:13:09.085  WARN 252548 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:13:09.085  INFO 252548 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 10:13:09.085  WARN 252548 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:13:09.086  INFO 252548 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 10:13:09.121 DEBUG 252548 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 10:13:09.127 DEBUG 252548 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 10:13:09.137  INFO 252548 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2bb4623e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6207b8ef, org.springframework.security.web.context.SecurityContextPersistenceFilter@2db6cf80, org.springframework.security.web.header.HeaderWriterFilter@7aea3d01, org.springframework.security.web.authentication.logout.LogoutFilter@1917d908, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@59323bcc, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3777eab5, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@3a47c421, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@334eb3b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24fa3653, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c619009, org.springframework.security.web.session.SessionManagementFilter@4ef0d020, org.springframework.security.web.access.ExceptionTranslationFilter@73c01603, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1bc19d2b]
2023-04-06 10:13:09.222  INFO 252548 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 10:13:09.482  INFO 252548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 10:13:09.739  INFO 252548 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 5.2 seconds (JVM running for 6.061)
2023-04-06 10:13:11.098  INFO 252548 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 10:13:11.099  INFO 252548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 10:13:11.100  INFO 252548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 10:13:11.106 DEBUG 252548 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 10:13:11.110 DEBUG 252548 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 10:13:11.112  INFO 252548 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 10:13:11.139  INFO 252548 --- [http-nio-8080-exec-1] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 10
2023-04-06 10:13:11.147 DEBUG 252548 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 10:13:11.148 DEBUG 252548 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 10:13:11.238 DEBUG 252548 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:13:11.272 DEBUG 252548 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 10:13:11.302 DEBUG 252548 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:13:11.380 DEBUG 252548 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:13:11.390 DEBUG 252548 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:13:11.655 ERROR 252548 --- [http-nio-8080-exec-1] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 10:13:11.687 DEBUG 252548 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 10:13:51.597  INFO 252548 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:13:51.600  INFO 252548 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 10:13:51.605  INFO 252548 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 10:13:55.092  INFO 253604 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 253604 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 10:13:55.093  INFO 253604 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 10:13:55.127  INFO 253604 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 10:13:55.127  INFO 253604 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 10:13:55.864  INFO 253604 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:13:55.865  INFO 253604 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 10:13:55.966  INFO 253604 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 95 ms. Found 5 JPA repository interfaces.
2023-04-06 10:13:55.977  INFO 253604 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 10:13:55.977  INFO 253604 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 10:13:55.998  INFO 253604 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:13:55.998  INFO 253604 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:13:55.999  INFO 253604 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:13:55.999  INFO 253604 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:13:55.999  INFO 253604 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 10:13:55.999  INFO 253604 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2023-04-06 10:13:56.239  INFO 253604 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#3254905f' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:13:56.240  INFO 253604 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#30a5f76c' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:13:56.245  INFO 253604 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#3e732d9f' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:13:56.247  INFO 253604 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:13:56.247  INFO 253604 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 10:13:56.442  INFO 253604 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 10:13:56.449  INFO 253604 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 10:13:56.449  INFO 253604 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 10:13:56.523  INFO 253604 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 10:13:56.523  INFO 253604 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1396 ms
2023-04-06 10:13:56.633  INFO 253604 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 10:13:56.660  INFO 253604 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 10:13:56.750  INFO 253604 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 10:13:56.809  INFO 253604 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 10:13:56.959  INFO 253604 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 10:13:56.969  INFO 253604 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 10:13:57.738  INFO 253604 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 10:13:57.749  INFO 253604 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 10:13:58.117  WARN 253604 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 10:13:58.786  WARN 253604 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:13:58.787  INFO 253604 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 10:13:58.787  WARN 253604 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:13:58.787  INFO 253604 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 10:13:58.787  WARN 253604 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 10:13:58.788  INFO 253604 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 10:13:58.816 DEBUG 253604 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 10:13:58.821 DEBUG 253604 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 10:13:58.828  INFO 253604 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6fd475f7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2908d185, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c68e13f, org.springframework.security.web.header.HeaderWriterFilter@30709c6e, org.springframework.security.web.authentication.logout.LogoutFilter@5893093d, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2c5a9120, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@140e646a, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@389ca0ab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2994172, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1aa4a83c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70ec3060, org.springframework.security.web.session.SessionManagementFilter@21269350, org.springframework.security.web.access.ExceptionTranslationFilter@13ce5f22, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3adc8c6]
2023-04-06 10:13:58.892  INFO 253604 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 10:13:59.113  INFO 253604 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 10:13:59.321  INFO 253604 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 4.563 seconds (JVM running for 5.465)
2023-04-06 10:14:01.323  INFO 253604 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 10:14:01.324  INFO 253604 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 10:14:01.325  INFO 253604 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 10:14:01.331 DEBUG 253604 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 10:14:01.334 DEBUG 253604 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 10:14:01.335  INFO 253604 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 10:14:01.368  INFO 253604 --- [http-nio-8080-exec-1] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 10
2023-04-06 10:14:01.376 DEBUG 253604 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 10:14:01.376 DEBUG 253604 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 10:14:01.489 DEBUG 253604 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:14:01.541 DEBUG 253604 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 10:14:01.597 DEBUG 253604 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:14:01.609 DEBUG 253604 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:14:01.621 DEBUG 253604 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:14:01.744 DEBUG 253604 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 10:14:01.824 DEBUG 253604 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 10:14:30.161 DEBUG 253604 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 10:14:30.162 DEBUG 253604 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 10:14:30.162  INFO 253604 --- [http-nio-8080-exec-9] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 10:14:30.165  INFO 253604 --- [http-nio-8080-exec-9] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 10
2023-04-06 10:14:30.166 DEBUG 253604 --- [http-nio-8080-exec-9] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 10:14:30.166 DEBUG 253604 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 10:14:30.191 DEBUG 253604 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:14:30.200 DEBUG 253604 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 10:14:30.222 DEBUG 253604 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:14:30.229 DEBUG 253604 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:14:30.248 DEBUG 253604 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 10:14:30.259 DEBUG 253604 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 10:14:30.288 DEBUG 253604 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 15:39:20.656  INFO 283296 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 283296 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 15:39:20.657  INFO 283296 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 15:39:20.693  INFO 283296 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 15:39:20.693  INFO 283296 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 15:39:21.420  INFO 283296 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 15:39:21.421  INFO 283296 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 15:39:21.501  INFO 283296 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 75 ms. Found 5 JPA repository interfaces.
2023-04-06 15:39:21.512  INFO 283296 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 15:39:21.513  INFO 283296 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 15:39:21.531  INFO 283296 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:39:21.531  INFO 283296 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:39:21.531  INFO 283296 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:39:21.532  INFO 283296 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:39:21.532  INFO 283296 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:39:21.532  INFO 283296 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2023-04-06 15:39:21.777  INFO 283296 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#5c9913a5' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:39:21.779  INFO 283296 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#6847b7b9' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:39:21.784  INFO 283296 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#11efcdbf' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:39:21.786  INFO 283296 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:39:21.786  INFO 283296 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:39:21.972  INFO 283296 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 15:39:21.978  INFO 283296 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 15:39:21.978  INFO 283296 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 15:39:22.050  INFO 283296 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 15:39:22.051  INFO 283296 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1358 ms
2023-04-06 15:39:22.171  INFO 283296 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 15:39:22.197  INFO 283296 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 15:39:22.287  INFO 283296 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 15:39:22.349  INFO 283296 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 15:39:22.518  INFO 283296 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 15:39:22.529  INFO 283296 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 15:39:23.344  INFO 283296 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 15:39:23.354  INFO 283296 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 15:39:23.828  WARN 283296 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 15:39:24.697  WARN 283296 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:39:24.698  INFO 283296 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 15:39:24.699  WARN 283296 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:39:24.699  INFO 283296 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 15:39:24.699  WARN 283296 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:39:24.699  INFO 283296 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 15:39:24.727 DEBUG 283296 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 15:39:24.731 DEBUG 283296 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 15:39:24.738  INFO 283296 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30b7cf07, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@37aa57a9, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a804b35, org.springframework.security.web.header.HeaderWriterFilter@62523dfa, org.springframework.security.web.authentication.logout.LogoutFilter@535ac412, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@3dfaf016, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@69d6d035, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@36f537af, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a00715a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@654061eb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cc47325, org.springframework.security.web.session.SessionManagementFilter@62180b56, org.springframework.security.web.access.ExceptionTranslationFilter@60f5c3d9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11748966]
2023-04-06 15:39:24.801  INFO 283296 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 15:39:25.062  INFO 283296 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 15:39:25.278  INFO 283296 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 4.965 seconds (JVM running for 5.899)
2023-04-06 15:39:29.976  INFO 283296 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 15:39:29.979  INFO 283296 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 15:39:29.984  INFO 283296 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 15:39:57.674  INFO 285988 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 285988 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 15:39:57.675  INFO 285988 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 15:39:57.707  INFO 285988 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 15:39:57.707  INFO 285988 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 15:39:58.452  INFO 285988 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 15:39:58.452  INFO 285988 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 15:39:58.566  INFO 285988 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 107 ms. Found 5 JPA repository interfaces.
2023-04-06 15:39:58.577  INFO 285988 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 15:39:58.578  INFO 285988 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 15:39:58.598  INFO 285988 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:39:58.598  INFO 285988 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:39:58.599  INFO 285988 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:39:58.599  INFO 285988 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:39:58.599  INFO 285988 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:39:58.599  INFO 285988 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2023-04-06 15:39:58.870  INFO 285988 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#77c426a2' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:39:58.871  INFO 285988 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#435001b5' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:39:58.877  INFO 285988 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#18b94c12' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:39:58.879  INFO 285988 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:39:58.879  INFO 285988 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:39:59.074  INFO 285988 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 15:39:59.081  INFO 285988 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 15:39:59.081  INFO 285988 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 15:39:59.183  INFO 285988 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 15:39:59.183  INFO 285988 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1476 ms
2023-04-06 15:39:59.302  INFO 285988 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 15:39:59.333  INFO 285988 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 15:39:59.419  INFO 285988 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 15:39:59.484  INFO 285988 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 15:39:59.670  INFO 285988 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 15:39:59.679  INFO 285988 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 15:40:00.228  INFO 285988 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 15:40:00.236  INFO 285988 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 15:40:00.641  WARN 285988 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 15:40:01.315  WARN 285988 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:40:01.317  INFO 285988 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 15:40:01.317  WARN 285988 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:40:01.317  INFO 285988 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 15:40:01.317  WARN 285988 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:40:01.317  INFO 285988 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 15:40:01.346 DEBUG 285988 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 15:40:01.351 DEBUG 285988 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 15:40:01.359  INFO 285988 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4697d2cd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30131f2, org.springframework.security.web.context.SecurityContextPersistenceFilter@143a843a, org.springframework.security.web.header.HeaderWriterFilter@33856d44, org.springframework.security.web.authentication.logout.LogoutFilter@202a0e67, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@38f67529, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3f3491a6, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@549b6b08, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@265835b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64042d1d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5876842f, org.springframework.security.web.session.SessionManagementFilter@2ba59f93, org.springframework.security.web.access.ExceptionTranslationFilter@23499041, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d3463e0]
2023-04-06 15:40:01.416  INFO 285988 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 15:40:01.634  INFO 285988 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 15:40:01.814  INFO 285988 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 4.474 seconds (JVM running for 5.506)
2023-04-06 15:40:23.075  INFO 285988 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 15:40:23.075  INFO 285988 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 15:40:23.077  INFO 285988 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 15:40:23.084 DEBUG 285988 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing PUT /api/chat/image
2023-04-06 15:40:23.088 DEBUG 285988 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 15:40:23.089  INFO 285988 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 15:40:23.114  INFO 285988 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 15:40:23.119 DEBUG 285988 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/chat/image] with attributes [permitAll]
2023-04-06 15:40:23.121 DEBUG 285988 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured PUT /api/chat/image
2023-04-06 15:40:23.553 DEBUG 285988 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 15:40:23.591 DEBUG 285988 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        chatimage0_.missing_id as missing_3_0_0_,
        chatimage0_.user_id as user_id2_0_0_,
        chatimage0_.image_path as image_pa1_0_0_ 
    from
        chat_image chatimage0_ 
    where
        chatimage0_.missing_id=? 
        and chatimage0_.user_id=?
2023-04-06 15:40:23.983 DEBUG 285988 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 15:40:37.046 DEBUG 285988 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing PATCH /api/regist
2023-04-06 15:40:37.046 DEBUG 285988 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 15:40:37.046  INFO 285988 --- [http-nio-8080-exec-7] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 15:40:37.049  INFO 285988 --- [http-nio-8080-exec-7] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 15:40:37.049 DEBUG 285988 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PATCH /api/regist] with attributes [permitAll]
2023-04-06 15:40:37.049 DEBUG 285988 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured PATCH /api/regist
2023-04-06 15:40:37.081 DEBUG 285988 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 15:40:37.155 DEBUG 285988 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 15:40:37.186 DEBUG 285988 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 15:40:53.648 DEBUG 285988 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 15:40:53.648 DEBUG 285988 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 15:40:53.648  INFO 285988 --- [http-nio-8080-exec-10] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 15:40:53.651  INFO 285988 --- [http-nio-8080-exec-10] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 15:40:53.652 DEBUG 285988 --- [http-nio-8080-exec-10] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 15:40:53.652 DEBUG 285988 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 15:40:53.679 DEBUG 285988 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 15:40:53.694 DEBUG 285988 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 15:40:53.718 DEBUG 285988 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 15:40:53.738 DEBUG 285988 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 15:40:53.774 ERROR 285988 --- [http-nio-8080-exec-10] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 15:40:53.778 DEBUG 285988 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 15:52:42.160  INFO 285988 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 15:52:42.163  INFO 285988 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 15:52:42.168  INFO 285988 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 15:52:48.096  INFO 284880 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 284880 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 15:52:48.098  INFO 284880 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 15:52:48.151  INFO 284880 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 15:52:48.152  INFO 284880 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 15:52:49.005  INFO 284880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 15:52:49.005  INFO 284880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 15:52:49.095  INFO 284880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 84 ms. Found 5 JPA repository interfaces.
2023-04-06 15:52:49.105  INFO 284880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 15:52:49.105  INFO 284880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 15:52:49.126  INFO 284880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:52:49.126  INFO 284880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:52:49.127  INFO 284880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:52:49.127  INFO 284880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:52:49.127  INFO 284880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:52:49.127  INFO 284880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2023-04-06 15:52:49.374  INFO 284880 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#4f00fe1d' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:52:49.375  INFO 284880 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#1c66cbfc' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:52:49.381  INFO 284880 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#27f07917' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:52:49.383  INFO 284880 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:52:49.383  INFO 284880 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:52:49.624  INFO 284880 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 15:52:49.633  INFO 284880 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 15:52:49.633  INFO 284880 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 15:52:49.715  INFO 284880 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 15:52:49.715  INFO 284880 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1563 ms
2023-04-06 15:52:49.873  INFO 284880 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 15:52:49.906  INFO 284880 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 15:52:50.004  INFO 284880 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 15:52:50.080  INFO 284880 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 15:52:50.529  INFO 284880 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 15:52:50.552  INFO 284880 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 15:52:51.040 DEBUG 284880 --- [restartedMain] org.hibernate.SQL                        : 
    
    create table chat_image (
       image_path varchar(255),
        user_id bigint not null,
        missing_id bigint not null,
        primary key (missing_id, user_id)
    ) engine=InnoDB
2023-04-06 15:52:51.109 DEBUG 284880 --- [restartedMain] org.hibernate.SQL                        : 
    
    alter table chat_image 
       add constraint FKgg81ibhrjwe8e3n7xf09ocke8 
       foreign key (user_id) 
       references user (user_id)
2023-04-06 15:52:51.225 DEBUG 284880 --- [restartedMain] org.hibernate.SQL                        : 
    
    alter table chat_image 
       add constraint FKq1spva40q5pr5scne7e6lx5em 
       foreign key (missing_id) 
       references regist_info (regist_id)
2023-04-06 15:52:51.388  INFO 284880 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 15:52:51.398  INFO 284880 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 15:52:51.854  WARN 284880 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 15:52:52.789  WARN 284880 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:52:52.789  INFO 284880 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 15:52:52.789  WARN 284880 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:52:52.790  INFO 284880 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 15:52:52.790  WARN 284880 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:52:52.790  INFO 284880 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 15:52:52.821 DEBUG 284880 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 15:52:52.826 DEBUG 284880 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 15:52:52.833  INFO 284880 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@689bfdb0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28f59e67, org.springframework.security.web.context.SecurityContextPersistenceFilter@fc8fccc, org.springframework.security.web.header.HeaderWriterFilter@1371efb5, org.springframework.security.web.authentication.logout.LogoutFilter@5c320253, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@60339ed4, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@dbaeeef, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@18d5d170, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e656ce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d422a33, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c31d93f, org.springframework.security.web.session.SessionManagementFilter@6d1abcc5, org.springframework.security.web.access.ExceptionTranslationFilter@15f7855f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@47cfeec5]
2023-04-06 15:52:52.901  INFO 284880 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 15:52:53.181  INFO 284880 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 15:52:53.439  INFO 284880 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 5.918 seconds (JVM running for 7.108)
2023-04-06 15:55:02.028  INFO 284880 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 15:55:02.028  INFO 284880 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 15:55:02.029  INFO 284880 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 15:55:02.035 DEBUG 284880 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 15:55:02.039 DEBUG 284880 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 15:55:02.039  INFO 284880 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 15:55:02.063  INFO 284880 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : 만료된 access jwt 토큰입니다
2023-04-06 15:55:02.064  INFO 284880 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : refresh 토큰 : null
2023-04-06 15:55:02.077 DEBUG 284880 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 15:55:22.316 DEBUG 284880 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 15:55:22.317 DEBUG 284880 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 15:55:22.317  INFO 284880 --- [http-nio-8080-exec-3] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 15:55:22.322  INFO 284880 --- [http-nio-8080-exec-3] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 15:55:22.332 DEBUG 284880 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 15:55:22.332 DEBUG 284880 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 15:55:22.419 DEBUG 284880 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 15:55:22.458 DEBUG 284880 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 15:55:22.519 DEBUG 284880 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 15:55:22.572 ERROR 284880 --- [http-nio-8080-exec-3] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 15:55:22.587 DEBUG 284880 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 15:56:47.952  INFO 284880 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 15:56:47.956  INFO 284880 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 15:56:47.961  INFO 284880 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 15:56:51.684  INFO 286568 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 286568 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 15:56:51.684  INFO 286568 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 15:56:51.720  INFO 286568 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 15:56:51.720  INFO 286568 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 15:56:52.483  INFO 286568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 15:56:52.484  INFO 286568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 15:56:52.573  INFO 286568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 83 ms. Found 5 JPA repository interfaces.
2023-04-06 15:56:52.582  INFO 286568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 15:56:52.583  INFO 286568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 15:56:52.603  INFO 286568 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:56:52.604  INFO 286568 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:56:52.604  INFO 286568 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:56:52.604  INFO 286568 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:56:52.604  INFO 286568 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 15:56:52.604  INFO 286568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2023-04-06 15:56:52.871  INFO 286568 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#7682ff21' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:56:52.872  INFO 286568 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#42dd3a8e' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:56:52.877  INFO 286568 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#89d966c' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:56:52.878  INFO 286568 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:56:52.879  INFO 286568 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 15:56:53.067  INFO 286568 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 15:56:53.074  INFO 286568 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 15:56:53.074  INFO 286568 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 15:56:53.149  INFO 286568 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 15:56:53.149  INFO 286568 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1428 ms
2023-04-06 15:56:53.277  INFO 286568 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 15:56:53.306  INFO 286568 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 15:56:53.400  INFO 286568 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 15:56:53.464  INFO 286568 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 15:56:53.611  INFO 286568 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 15:56:53.620  INFO 286568 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 15:56:55.467  INFO 286568 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 15:56:55.475  INFO 286568 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 15:56:55.902  WARN 286568 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 15:56:56.577  WARN 286568 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:56:56.577  INFO 286568 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 15:56:56.577  WARN 286568 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:56:56.578  INFO 286568 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 15:56:56.578  WARN 286568 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 15:56:56.578  INFO 286568 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 15:56:56.604 DEBUG 286568 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 15:56:56.608 DEBUG 286568 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 15:56:56.614  INFO 286568 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7a53a4a8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3294f526, org.springframework.security.web.context.SecurityContextPersistenceFilter@3341ca74, org.springframework.security.web.header.HeaderWriterFilter@295c5bdc, org.springframework.security.web.authentication.logout.LogoutFilter@5217cacb, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@741124ae, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@7d53b4, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@6201dd8c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6924b216, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27b425f9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@592a8e70, org.springframework.security.web.session.SessionManagementFilter@7c6be4af, org.springframework.security.web.access.ExceptionTranslationFilter@28dc458e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ad40564]
2023-04-06 15:56:56.675  INFO 286568 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 15:56:56.888  INFO 286568 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 15:56:57.066  INFO 286568 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 5.731 seconds (JVM running for 6.677)
2023-04-06 15:57:00.488  INFO 286568 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 15:57:00.489  INFO 286568 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 15:57:00.491  INFO 286568 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2023-04-06 15:57:00.498 DEBUG 286568 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 15:57:00.501 DEBUG 286568 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 15:57:00.502  INFO 286568 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 15:57:00.534  INFO 286568 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 15:57:00.544 DEBUG 286568 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 15:57:00.544 DEBUG 286568 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 15:57:00.634 DEBUG 286568 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 15:57:00.672 DEBUG 286568 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 15:57:00.728 DEBUG 286568 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 15:57:00.815 DEBUG 286568 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 15:57:28.017 DEBUG 286568 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 15:57:28.017 DEBUG 286568 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 15:57:28.017  INFO 286568 --- [http-nio-8080-exec-3] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 15:57:28.021  INFO 286568 --- [http-nio-8080-exec-3] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 15:57:28.021 DEBUG 286568 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 15:57:28.021 DEBUG 286568 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 15:57:28.044 DEBUG 286568 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 15:57:28.052 DEBUG 286568 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 15:57:28.080 DEBUG 286568 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 15:57:28.107 DEBUG 286568 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 15:57:57.833 DEBUG 286568 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/regist
2023-04-06 15:57:57.833 DEBUG 286568 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 15:57:57.833  INFO 286568 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 15:57:57.837  INFO 286568 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : 만료된 access jwt 토큰입니다
2023-04-06 15:57:57.838  INFO 286568 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : refresh 토큰 : null
2023-04-06 15:57:57.843 DEBUG 286568 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 15:58:00.481 DEBUG 286568 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/regist
2023-04-06 15:58:00.482 DEBUG 286568 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 15:58:00.482  INFO 286568 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 15:58:00.485  INFO 286568 --- [http-nio-8080-exec-6] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 15:58:00.485 DEBUG 286568 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist] with attributes [permitAll]
2023-04-06 15:58:00.485 DEBUG 286568 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/regist
2023-04-06 15:58:00.534 DEBUG 286568 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_ 
    where
        registinfo0_.is_missing=1
2023-04-06 15:58:00.567 DEBUG 286568 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 15:58:00.625 DEBUG 286568 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:01:32.891  INFO 286568 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:01:32.894  INFO 286568 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 16:01:32.900  INFO 286568 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 16:01:37.461  INFO 286068 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 286068 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 16:01:37.462  INFO 286068 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 16:01:37.496  INFO 286068 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 16:01:37.497  INFO 286068 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 16:01:38.309  INFO 286068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:01:38.310  INFO 286068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 16:01:38.455  INFO 286068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 137 ms. Found 5 JPA repository interfaces.
2023-04-06 16:01:38.470  INFO 286068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:01:38.471  INFO 286068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 16:01:38.498  INFO 286068 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:01:38.498  INFO 286068 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:01:38.498  INFO 286068 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:01:38.499  INFO 286068 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:01:38.499  INFO 286068 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:01:38.499  INFO 286068 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2023-04-06 16:01:38.766  INFO 286068 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#75bd3481' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:01:38.767  INFO 286068 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#bef929f' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:01:38.772  INFO 286068 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#47c5970f' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:01:38.773  INFO 286068 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:01:38.774  INFO 286068 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:01:38.962  INFO 286068 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 16:01:38.968  INFO 286068 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 16:01:38.968  INFO 286068 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 16:01:39.049  INFO 286068 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 16:01:39.049  INFO 286068 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1552 ms
2023-04-06 16:01:39.207  INFO 286068 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 16:01:39.243  INFO 286068 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 16:01:39.345  INFO 286068 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 16:01:39.418  INFO 286068 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 16:01:39.593  INFO 286068 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 16:01:39.606  INFO 286068 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 16:01:40.602  INFO 286068 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 16:01:40.624  INFO 286068 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:01:41.127  WARN 286068 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 16:01:41.961  WARN 286068 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:01:41.962  INFO 286068 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 16:01:41.962  WARN 286068 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:01:41.962  INFO 286068 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 16:01:41.962  WARN 286068 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:01:41.963  INFO 286068 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 16:01:41.990 DEBUG 286068 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 16:01:41.995 DEBUG 286068 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 16:01:42.006  INFO 286068 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@72cff68c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@bb7d65c, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e3bf50f, org.springframework.security.web.header.HeaderWriterFilter@282aa1, org.springframework.security.web.authentication.logout.LogoutFilter@36e6a8d0, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@50b43b53, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@46f28bde, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@557fe83e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42afe9ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62ae5579, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2da84ce2, org.springframework.security.web.session.SessionManagementFilter@4b10cf4b, org.springframework.security.web.access.ExceptionTranslationFilter@19e4b9b4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4408b27c]
2023-04-06 16:01:42.078  INFO 286068 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 16:01:42.346  INFO 286068 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 16:01:42.568  INFO 286068 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 5.496 seconds (JVM running for 6.485)
2023-04-06 16:01:47.607  INFO 286068 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 16:01:47.608  INFO 286068 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 16:01:47.609  INFO 286068 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 16:01:47.616 DEBUG 286068 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/regist
2023-04-06 16:01:47.619 DEBUG 286068 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:01:47.620  INFO 286068 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:01:47.645  INFO 286068 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:01:47.652 DEBUG 286068 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist] with attributes [permitAll]
2023-04-06 16:01:47.652 DEBUG 286068 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/regist
2023-04-06 16:01:47.698 DEBUG 286068 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_ 
    where
        registinfo0_.is_missing=1
2023-04-06 16:01:47.735 DEBUG 286068 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:01:47.806 DEBUG 286068 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:03:06.360 DEBUG 286068 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 16:03:06.360 DEBUG 286068 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:03:06.360  INFO 286068 --- [http-nio-8080-exec-5] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:03:06.363  INFO 286068 --- [http-nio-8080-exec-5] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:03:06.364 DEBUG 286068 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 16:03:06.364 DEBUG 286068 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 16:03:06.433 DEBUG 286068 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:03:06.446 DEBUG 286068 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 16:03:06.479 DEBUG 286068 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 16:03:06.519 DEBUG 286068 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:03:11.208 DEBUG 286068 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:03:11.208 DEBUG 286068 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:03:11.208  INFO 286068 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:03:11.212  INFO 286068 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : 만료된 access jwt 토큰입니다
2023-04-06 16:03:11.213  INFO 286068 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : refresh 토큰 : null
2023-04-06 16:03:11.219 DEBUG 286068 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:03:23.419 DEBUG 286068 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:03:23.419 DEBUG 286068 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:03:23.420  INFO 286068 --- [http-nio-8080-exec-7] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:03:23.422  INFO 286068 --- [http-nio-8080-exec-7] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:03:23.423 DEBUG 286068 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:03:23.423 DEBUG 286068 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:03:24.086 DEBUG 286068 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:03:24.121 DEBUG 286068 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:03:24.161 DEBUG 286068 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:03:24.185 ERROR 286068 --- [http-nio-8080-exec-7] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:03:24.188 DEBUG 286068 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:06:52.411  INFO 286068 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:06:52.414  INFO 286068 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 16:06:52.419  INFO 286068 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 16:06:56.194  INFO 127256 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 127256 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 16:06:56.195  INFO 127256 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 16:06:56.239  INFO 127256 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 16:06:56.239  INFO 127256 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 16:06:57.016  INFO 127256 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:06:57.017  INFO 127256 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 16:06:57.111  INFO 127256 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 88 ms. Found 5 JPA repository interfaces.
2023-04-06 16:06:57.121  INFO 127256 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:06:57.122  INFO 127256 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 16:06:57.143  INFO 127256 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:06:57.144  INFO 127256 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:06:57.144  INFO 127256 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:06:57.144  INFO 127256 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:06:57.144  INFO 127256 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:06:57.145  INFO 127256 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2023-04-06 16:06:57.418  INFO 127256 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#a6b5007' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:06:57.419  INFO 127256 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#63789804' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:06:57.425  INFO 127256 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#186569f8' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:06:57.426  INFO 127256 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:06:57.426  INFO 127256 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:06:57.643  INFO 127256 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 16:06:57.652  INFO 127256 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 16:06:57.653  INFO 127256 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 16:06:57.730  INFO 127256 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 16:06:57.731  INFO 127256 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1491 ms
2023-04-06 16:06:57.890  INFO 127256 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 16:06:57.924  INFO 127256 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 16:06:58.016  INFO 127256 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 16:06:58.107  INFO 127256 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 16:06:58.282  INFO 127256 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 16:06:58.293  INFO 127256 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 16:06:58.926  INFO 127256 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 16:06:58.942  INFO 127256 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:06:59.445  WARN 127256 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 16:07:00.342  WARN 127256 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:07:00.343  INFO 127256 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 16:07:00.344  WARN 127256 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:07:00.344  INFO 127256 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 16:07:00.344  WARN 127256 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:07:00.344  INFO 127256 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 16:07:00.376 DEBUG 127256 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 16:07:00.382 DEBUG 127256 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 16:07:00.393  INFO 127256 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7a83047e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ae08198, org.springframework.security.web.context.SecurityContextPersistenceFilter@f07d1e1, org.springframework.security.web.header.HeaderWriterFilter@11ff953e, org.springframework.security.web.authentication.logout.LogoutFilter@36ef0fc0, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@7559dd25, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3967a06d, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@78039861, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5af2c835, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12fb23c2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38598784, org.springframework.security.web.session.SessionManagementFilter@e27adee, org.springframework.security.web.access.ExceptionTranslationFilter@126324d3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62c7fdc1]
2023-04-06 16:07:00.482  INFO 127256 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 16:07:00.789  INFO 127256 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 16:07:01.028  INFO 127256 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 5.214 seconds (JVM running for 6.241)
2023-04-06 16:07:04.763  INFO 127256 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 16:07:04.763  INFO 127256 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 16:07:04.765  INFO 127256 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 16:07:04.771 DEBUG 127256 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:07:04.774 DEBUG 127256 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:07:04.775  INFO 127256 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:07:04.816  INFO 127256 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:07:04.822 DEBUG 127256 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:07:04.823 DEBUG 127256 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:07:04.910 DEBUG 127256 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:07:05.010 DEBUG 127256 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:07:05.087 DEBUG 127256 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:07:05.427 ERROR 127256 --- [http-nio-8080-exec-2] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:07:05.455 DEBUG 127256 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:08:32.212 DEBUG 127256 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:08:32.212 DEBUG 127256 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:08:32.212  INFO 127256 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:08:32.217  INFO 127256 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : 만료된 access jwt 토큰입니다
2023-04-06 16:08:32.217  INFO 127256 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : refresh 토큰 : null
2023-04-06 16:08:32.221 DEBUG 127256 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:08:40.217 DEBUG 127256 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:08:40.217 DEBUG 127256 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:08:40.217  INFO 127256 --- [http-nio-8080-exec-5] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:08:40.222  INFO 127256 --- [http-nio-8080-exec-5] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:08:40.223 DEBUG 127256 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/detail] with attributes [permitAll]
2023-04-06 16:08:40.223 DEBUG 127256 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/detail
2023-04-06 16:08:40.242 DEBUG 127256 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:08:40.290 DEBUG 127256 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:08:47.739 DEBUG 127256 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:08:47.740 DEBUG 127256 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:08:47.740  INFO 127256 --- [http-nio-8080-exec-7] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:08:47.743  INFO 127256 --- [http-nio-8080-exec-7] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:08:47.744 DEBUG 127256 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/detail] with attributes [permitAll]
2023-04-06 16:08:47.744 DEBUG 127256 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/detail
2023-04-06 16:08:47.758 DEBUG 127256 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:08:47.774 DEBUG 127256 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:10:17.166 DEBUG 127256 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:10:17.166 DEBUG 127256 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:10:17.166  INFO 127256 --- [http-nio-8080-exec-9] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:10:17.170  INFO 127256 --- [http-nio-8080-exec-9] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:10:17.170 DEBUG 127256 --- [http-nio-8080-exec-9] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/detail] with attributes [permitAll]
2023-04-06 16:10:17.170 DEBUG 127256 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/detail
2023-04-06 16:10:17.193 DEBUG 127256 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:10:17.214 DEBUG 127256 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:11:34.198  INFO 127256 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:11:34.201  INFO 127256 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 16:11:34.207  INFO 127256 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 16:11:37.883  INFO 258672 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 258672 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 16:11:37.884  INFO 258672 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 16:11:37.919  INFO 258672 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 16:11:37.919  INFO 258672 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 16:11:38.665  INFO 258672 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:11:38.665  INFO 258672 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 16:11:38.766  INFO 258672 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 94 ms. Found 5 JPA repository interfaces.
2023-04-06 16:11:38.777  INFO 258672 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:11:38.778  INFO 258672 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 16:11:38.800  INFO 258672 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:11:38.800  INFO 258672 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:11:38.801  INFO 258672 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:11:38.801  INFO 258672 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:11:38.801  INFO 258672 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:11:38.801  INFO 258672 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2023-04-06 16:11:39.065  INFO 258672 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#6ce14e3a' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:11:39.067  INFO 258672 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#35d043c1' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:11:39.072  INFO 258672 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#46c13993' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:11:39.074  INFO 258672 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:11:39.074  INFO 258672 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:11:39.282  INFO 258672 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 16:11:39.290  INFO 258672 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 16:11:39.290  INFO 258672 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 16:11:39.369  INFO 258672 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 16:11:39.370  INFO 258672 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1450 ms
2023-04-06 16:11:39.491  INFO 258672 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 16:11:39.531  INFO 258672 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 16:11:39.626  INFO 258672 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 16:11:39.700  INFO 258672 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 16:11:39.838  INFO 258672 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 16:11:39.847  INFO 258672 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 16:11:40.564  INFO 258672 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 16:11:40.579  INFO 258672 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:11:40.994  WARN 258672 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 16:11:41.689  WARN 258672 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:11:41.690  INFO 258672 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 16:11:41.691  WARN 258672 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:11:41.691  INFO 258672 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 16:11:41.691  WARN 258672 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:11:41.691  INFO 258672 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 16:11:41.722 DEBUG 258672 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 16:11:41.728 DEBUG 258672 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 16:11:41.735  INFO 258672 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@59fc706e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67b72ec2, org.springframework.security.web.context.SecurityContextPersistenceFilter@737c4012, org.springframework.security.web.header.HeaderWriterFilter@7bd00037, org.springframework.security.web.authentication.logout.LogoutFilter@fb6b839, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@295e9ec4, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@f8416a4, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@7cfff161, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e53ca7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ea18898, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77e15e26, org.springframework.security.web.session.SessionManagementFilter@956270c, org.springframework.security.web.access.ExceptionTranslationFilter@53f82ee7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@75f7ceeb]
2023-04-06 16:11:41.805  INFO 258672 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 16:11:42.053  INFO 258672 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 16:11:42.287  INFO 258672 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 4.75 seconds (JVM running for 5.785)
2023-04-06 16:11:48.282  INFO 258672 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 16:11:48.283  INFO 258672 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 16:11:48.284  INFO 258672 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 16:11:48.290 DEBUG 258672 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:11:48.293 DEBUG 258672 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:11:48.294  INFO 258672 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:11:48.319  INFO 258672 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:11:48.326 DEBUG 258672 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/detail] with attributes [permitAll]
2023-04-06 16:11:48.326 DEBUG 258672 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/detail
2023-04-06 16:11:48.393 DEBUG 258672 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:11:48.849 ERROR 258672 --- [http-nio-8080-exec-2] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:11:48.875 DEBUG 258672 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:12:29.131 DEBUG 258672 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 16:12:29.131 DEBUG 258672 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:12:29.131  INFO 258672 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:12:29.134  INFO 258672 --- [http-nio-8080-exec-4] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:12:29.134 DEBUG 258672 --- [http-nio-8080-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 16:12:29.134 DEBUG 258672 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 16:12:29.194 DEBUG 258672 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:12:29.217 DEBUG 258672 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 16:12:29.259 DEBUG 258672 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 16:12:29.307 DEBUG 258672 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:12:59.147 DEBUG 258672 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:12:59.148 DEBUG 258672 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:12:59.148  INFO 258672 --- [http-nio-8080-exec-5] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:12:59.150  INFO 258672 --- [http-nio-8080-exec-5] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:12:59.151 DEBUG 258672 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:12:59.151 DEBUG 258672 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:12:59.186 DEBUG 258672 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:12:59.237 DEBUG 258672 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:12:59.600 DEBUG 258672 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:12:59.941 DEBUG 258672 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:13:10.848 DEBUG 258672 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:13:10.848 DEBUG 258672 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:13:10.848  INFO 258672 --- [http-nio-8080-exec-7] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:13:10.852  INFO 258672 --- [http-nio-8080-exec-7] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:13:10.852 DEBUG 258672 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:13:10.852 DEBUG 258672 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:13:11.800 DEBUG 258672 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:13:11.847 DEBUG 258672 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:13:11.884 DEBUG 258672 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:13:11.913 DEBUG 258672 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:14:11.784 DEBUG 258672 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:14:11.784 DEBUG 258672 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:14:11.785  INFO 258672 --- [http-nio-8080-exec-10] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:14:11.787  INFO 258672 --- [http-nio-8080-exec-10] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:14:11.788 DEBUG 258672 --- [http-nio-8080-exec-10] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:14:11.788 DEBUG 258672 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:14:12.137 DEBUG 258672 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:14:12.491 DEBUG 258672 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:14:12.529 DEBUG 258672 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:14:12.562 DEBUG 258672 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:14:14.109 DEBUG 258672 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:14:14.109 DEBUG 258672 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:14:14.110  INFO 258672 --- [http-nio-8080-exec-8] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:14:14.113  INFO 258672 --- [http-nio-8080-exec-8] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:14:14.113 DEBUG 258672 --- [http-nio-8080-exec-8] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:14:14.113 DEBUG 258672 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:14:14.462 DEBUG 258672 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:14:14.508 DEBUG 258672 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:14:14.554 DEBUG 258672 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:14:14.581 DEBUG 258672 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:14:18.378 DEBUG 258672 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:14:18.379 DEBUG 258672 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:14:18.379  INFO 258672 --- [http-nio-8080-exec-9] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:14:18.382  INFO 258672 --- [http-nio-8080-exec-9] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:14:18.382 DEBUG 258672 --- [http-nio-8080-exec-9] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:14:18.383 DEBUG 258672 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:14:18.419 DEBUG 258672 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:14:18.469 DEBUG 258672 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:14:18.519 DEBUG 258672 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:14:18.547 DEBUG 258672 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:14:32.239 DEBUG 258672 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:14:32.239 DEBUG 258672 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:14:32.239  INFO 258672 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:14:32.243  INFO 258672 --- [http-nio-8080-exec-6] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:14:32.244 DEBUG 258672 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/detail] with attributes [permitAll]
2023-04-06 16:14:32.244 DEBUG 258672 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/detail
2023-04-06 16:14:32.277 DEBUG 258672 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:14:32.301 ERROR 258672 --- [http-nio-8080-exec-6] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:14:32.302 DEBUG 258672 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:14:34.811 DEBUG 258672 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:14:34.812 DEBUG 258672 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:14:34.812  INFO 258672 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:14:34.816  INFO 258672 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:14:34.817 DEBUG 258672 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/detail] with attributes [permitAll]
2023-04-06 16:14:34.817 DEBUG 258672 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/detail
2023-04-06 16:14:34.835 DEBUG 258672 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:14:35.189 DEBUG 258672 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:14:37.874 DEBUG 258672 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:14:37.874 DEBUG 258672 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:14:37.874  INFO 258672 --- [http-nio-8080-exec-3] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:14:37.877  INFO 258672 --- [http-nio-8080-exec-3] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:14:37.877 DEBUG 258672 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/detail] with attributes [permitAll]
2023-04-06 16:14:37.877 DEBUG 258672 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/detail
2023-04-06 16:14:37.898 DEBUG 258672 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:14:37.925 ERROR 258672 --- [http-nio-8080-exec-3] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:14:37.928 DEBUG 258672 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:15:02.383  INFO 258672 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:15:02.385  INFO 258672 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 16:15:02.391  INFO 258672 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 16:15:06.245  INFO 263172 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 263172 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 16:15:06.246  INFO 263172 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 16:15:06.280  INFO 263172 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 16:15:06.280  INFO 263172 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 16:15:07.105  INFO 263172 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:15:07.105  INFO 263172 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 16:15:07.198  INFO 263172 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 87 ms. Found 5 JPA repository interfaces.
2023-04-06 16:15:07.209  INFO 263172 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:15:07.210  INFO 263172 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 16:15:07.230  INFO 263172 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:15:07.231  INFO 263172 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:15:07.231  INFO 263172 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:15:07.231  INFO 263172 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:15:07.231  INFO 263172 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:15:07.232  INFO 263172 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2023-04-06 16:15:07.498  INFO 263172 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#48c0bbcc' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:15:07.499  INFO 263172 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#22d8f8e7' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:15:07.505  INFO 263172 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#f19130' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:15:07.507  INFO 263172 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:15:07.508  INFO 263172 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:15:07.759  INFO 263172 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 16:15:07.768  INFO 263172 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 16:15:07.768  INFO 263172 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 16:15:07.852  INFO 263172 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 16:15:07.853  INFO 263172 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1572 ms
2023-04-06 16:15:08.017  INFO 263172 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 16:15:08.054  INFO 263172 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 16:15:08.154  INFO 263172 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 16:15:08.227  INFO 263172 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 16:15:08.813  INFO 263172 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 16:15:08.824  INFO 263172 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 16:15:11.448  INFO 263172 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 16:15:11.457  INFO 263172 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:15:11.918  WARN 263172 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 16:15:12.854  WARN 263172 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:15:12.854  INFO 263172 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 16:15:12.855  WARN 263172 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:15:12.855  INFO 263172 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 16:15:12.855  WARN 263172 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:15:12.855  INFO 263172 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 16:15:12.884 DEBUG 263172 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 16:15:12.890 DEBUG 263172 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 16:15:12.901  INFO 263172 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4c8a95f8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a238c32, org.springframework.security.web.context.SecurityContextPersistenceFilter@43ae81f2, org.springframework.security.web.header.HeaderWriterFilter@1aad6c34, org.springframework.security.web.authentication.logout.LogoutFilter@31a4216e, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@1e5994ce, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@43c9ab85, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@2c06a32a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1343610a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@50c2498b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e7f33ed, org.springframework.security.web.session.SessionManagementFilter@4e756d32, org.springframework.security.web.access.ExceptionTranslationFilter@13e636bf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@45cb8dec]
2023-04-06 16:15:12.974  INFO 263172 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 16:15:13.252  INFO 263172 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 16:15:13.451  INFO 263172 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 7.553 seconds (JVM running for 8.506)
2023-04-06 16:15:14.938  INFO 263172 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 16:15:14.939  INFO 263172 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 16:15:14.940  INFO 263172 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 16:15:14.947 DEBUG 263172 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:15:14.950 DEBUG 263172 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:15:14.951  INFO 263172 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:15:14.976  INFO 263172 --- [http-nio-8080-exec-1] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:15:14.982 DEBUG 263172 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:15:14.983 DEBUG 263172 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:15:15.111 DEBUG 263172 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:15:15.395 DEBUG 263172 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:15:15.473 DEBUG 263172 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:15:15.541 DEBUG 263172 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:15:20.305 DEBUG 263172 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:15:20.306 DEBUG 263172 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:15:20.306  INFO 263172 --- [http-nio-8080-exec-3] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:15:20.309  INFO 263172 --- [http-nio-8080-exec-3] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:15:20.309 DEBUG 263172 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:15:20.310 DEBUG 263172 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:15:20.345 DEBUG 263172 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:15:20.388 DEBUG 263172 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:15:20.429 DEBUG 263172 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:15:20.466 ERROR 263172 --- [http-nio-8080-exec-3] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:15:20.472 DEBUG 263172 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:16:10.859  INFO 263172 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:16:10.862  INFO 263172 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 16:16:10.868  INFO 263172 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 16:16:14.565  INFO 43368 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 43368 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 16:16:14.565  INFO 43368 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 16:16:14.616  INFO 43368 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 16:16:14.616  INFO 43368 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 16:16:15.444  INFO 43368 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:16:15.445  INFO 43368 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 16:16:15.538  INFO 43368 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 87 ms. Found 5 JPA repository interfaces.
2023-04-06 16:16:15.548  INFO 43368 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:16:15.549  INFO 43368 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 16:16:15.571  INFO 43368 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:16:15.572  INFO 43368 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:16:15.572  INFO 43368 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:16:15.572  INFO 43368 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:16:15.572  INFO 43368 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:16:15.573  INFO 43368 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2023-04-06 16:16:15.843  INFO 43368 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#71e28d5b' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:16:15.844  INFO 43368 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#2a95233f' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:16:15.850  INFO 43368 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#1007454b' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:16:15.852  INFO 43368 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:16:15.852  INFO 43368 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:16:16.045  INFO 43368 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 16:16:16.051  INFO 43368 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 16:16:16.052  INFO 43368 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 16:16:16.127  INFO 43368 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 16:16:16.127  INFO 43368 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1510 ms
2023-04-06 16:16:16.262  INFO 43368 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 16:16:16.302  INFO 43368 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 16:16:16.430  INFO 43368 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 16:16:16.509  INFO 43368 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 16:16:16.677  INFO 43368 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 16:16:16.685  INFO 43368 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 16:16:17.333  INFO 43368 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 16:16:17.342  INFO 43368 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:16:17.788  WARN 43368 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 16:16:18.507  WARN 43368 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:16:18.508  INFO 43368 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 16:16:18.508  WARN 43368 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:16:18.508  INFO 43368 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 16:16:18.508  WARN 43368 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:16:18.508  INFO 43368 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 16:16:18.534 DEBUG 43368 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 16:16:18.540 DEBUG 43368 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 16:16:18.547  INFO 43368 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5649688f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e8884bf, org.springframework.security.web.context.SecurityContextPersistenceFilter@1fdde91a, org.springframework.security.web.header.HeaderWriterFilter@624eb260, org.springframework.security.web.authentication.logout.LogoutFilter@3d863bf5, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@148ff35b, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@6913f6e7, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@7896a15e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6851ea6a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3540d62f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c0298ae, org.springframework.security.web.session.SessionManagementFilter@794e2186, org.springframework.security.web.access.ExceptionTranslationFilter@b57872d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@77e6551d]
2023-04-06 16:16:18.609  INFO 43368 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 16:16:18.856  INFO 43368 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 16:16:19.105  INFO 43368 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 4.89 seconds (JVM running for 5.849)
2023-04-06 16:16:20.635  INFO 43368 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 16:16:20.636  INFO 43368 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 16:16:20.637  INFO 43368 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2023-04-06 16:16:20.645 DEBUG 43368 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:16:20.648 DEBUG 43368 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:16:20.649  INFO 43368 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:16:20.679  INFO 43368 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:16:20.685 DEBUG 43368 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:16:20.685 DEBUG 43368 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:16:20.782 DEBUG 43368 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:16:20.851 DEBUG 43368 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:16:21.234 DEBUG 43368 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:16:21.267 ERROR 43368 --- [http-nio-8080-exec-2] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:16:21.294 DEBUG 43368 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:16:23.431 DEBUG 43368 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:16:23.432 DEBUG 43368 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:16:23.432  INFO 43368 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:16:23.435  INFO 43368 --- [http-nio-8080-exec-4] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:16:23.435 DEBUG 43368 --- [http-nio-8080-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:16:23.435 DEBUG 43368 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:16:23.471 DEBUG 43368 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:16:23.538 DEBUG 43368 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:16:23.585 DEBUG 43368 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:16:23.637 DEBUG 43368 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:16:29.761 DEBUG 43368 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:16:29.761 DEBUG 43368 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:16:29.761  INFO 43368 --- [http-nio-8080-exec-5] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:16:29.765  INFO 43368 --- [http-nio-8080-exec-5] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:16:29.766 DEBUG 43368 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:16:29.766 DEBUG 43368 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:16:29.793 DEBUG 43368 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:16:29.826 DEBUG 43368 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:16:30.167 DEBUG 43368 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:16:30.189 DEBUG 43368 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:16:46.968  INFO 43368 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:16:46.971  INFO 43368 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 16:16:46.975  INFO 43368 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 16:16:51.004  INFO 287392 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 287392 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 16:16:51.005  INFO 287392 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 16:16:51.041  INFO 287392 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 16:16:51.042  INFO 287392 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 16:16:51.817  INFO 287392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:16:51.817  INFO 287392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 16:16:51.913  INFO 287392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 90 ms. Found 5 JPA repository interfaces.
2023-04-06 16:16:51.923  INFO 287392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:16:51.924  INFO 287392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 16:16:51.946  INFO 287392 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:16:51.946  INFO 287392 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:16:51.946  INFO 287392 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:16:51.947  INFO 287392 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:16:51.947  INFO 287392 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:16:51.947  INFO 287392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2023-04-06 16:16:52.216  INFO 287392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#94f1fb8' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:16:52.217  INFO 287392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#511a0c02' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:16:52.222  INFO 287392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#4a32dd35' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:16:52.224  INFO 287392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:16:52.224  INFO 287392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:16:52.420  INFO 287392 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 16:16:52.427  INFO 287392 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 16:16:52.428  INFO 287392 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 16:16:52.509  INFO 287392 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 16:16:52.509  INFO 287392 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1467 ms
2023-04-06 16:16:52.634  INFO 287392 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 16:16:52.668  INFO 287392 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 16:16:52.761  INFO 287392 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 16:16:52.852  INFO 287392 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 16:16:53.131  INFO 287392 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 16:16:53.147  INFO 287392 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 16:16:53.760  INFO 287392 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 16:16:53.769  INFO 287392 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:16:54.292  WARN 287392 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 16:16:55.162  WARN 287392 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:16:55.162  INFO 287392 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 16:16:55.163  WARN 287392 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:16:55.163  INFO 287392 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 16:16:55.163  WARN 287392 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:16:55.163  INFO 287392 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 16:16:55.197 DEBUG 287392 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 16:16:55.204 DEBUG 287392 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 16:16:55.214  INFO 287392 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@c393187, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77d7c61a, org.springframework.security.web.context.SecurityContextPersistenceFilter@634432fd, org.springframework.security.web.header.HeaderWriterFilter@25d8106d, org.springframework.security.web.authentication.logout.LogoutFilter@5c50237d, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@3ed204ad, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@127c1de1, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@34a9e8e9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4f03747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1836fdd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e44f368, org.springframework.security.web.session.SessionManagementFilter@5cbaf3af, org.springframework.security.web.access.ExceptionTranslationFilter@6ddd0aee, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4aee42b7]
2023-04-06 16:16:55.290  INFO 287392 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 16:16:55.586  INFO 287392 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 16:16:55.835  INFO 287392 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 5.181 seconds (JVM running for 6.092)
2023-04-06 16:16:57.886  INFO 287392 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 16:16:57.887  INFO 287392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 16:16:57.889  INFO 287392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2023-04-06 16:16:57.895 DEBUG 287392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:16:57.900 DEBUG 287392 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:16:57.901  INFO 287392 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:16:57.934  INFO 287392 --- [http-nio-8080-exec-1] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:16:57.941 DEBUG 287392 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:16:57.941 DEBUG 287392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:16:58.036 DEBUG 287392 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:16:58.085 DEBUG 287392 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:16:58.163 DEBUG 287392 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:16:58.197 ERROR 287392 --- [http-nio-8080-exec-1] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:16:58.231 DEBUG 287392 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:01.593 DEBUG 287392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:01.594 DEBUG 287392 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:01.594  INFO 287392 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:01.597  INFO 287392 --- [http-nio-8080-exec-4] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:01.598 DEBUG 287392 --- [http-nio-8080-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:01.598 DEBUG 287392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:01.628 DEBUG 287392 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:01.674 DEBUG 287392 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:01.714 DEBUG 287392 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:02.050 ERROR 287392 --- [http-nio-8080-exec-4] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:17:02.052 DEBUG 287392 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:06.259 DEBUG 287392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:06.259 DEBUG 287392 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:06.259  INFO 287392 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:06.263  INFO 287392 --- [http-nio-8080-exec-6] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:06.263 DEBUG 287392 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:06.263 DEBUG 287392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:07.195 DEBUG 287392 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:07.241 DEBUG 287392 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:07.281 DEBUG 287392 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:07.328 DEBUG 287392 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:11.006 DEBUG 287392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:11.007 DEBUG 287392 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:11.007  INFO 287392 --- [http-nio-8080-exec-7] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:11.010  INFO 287392 --- [http-nio-8080-exec-7] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:11.010 DEBUG 287392 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:11.010 DEBUG 287392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:11.055 DEBUG 287392 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:11.091 DEBUG 287392 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:11.120 DEBUG 287392 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:11.146 ERROR 287392 --- [http-nio-8080-exec-7] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:17:11.150 DEBUG 287392 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:17.408 DEBUG 287392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:17.408 DEBUG 287392 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:17.408  INFO 287392 --- [http-nio-8080-exec-9] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:17.413  INFO 287392 --- [http-nio-8080-exec-9] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:17.413 DEBUG 287392 --- [http-nio-8080-exec-9] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:17.413 DEBUG 287392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:17.454 DEBUG 287392 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:17.747 DEBUG 287392 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:17.783 DEBUG 287392 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:17.819 ERROR 287392 --- [http-nio-8080-exec-9] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:17:17.821 DEBUG 287392 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:20.476 DEBUG 287392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:20.476 DEBUG 287392 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:20.476  INFO 287392 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:20.479  INFO 287392 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:20.479 DEBUG 287392 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:20.479 DEBUG 287392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:20.508 DEBUG 287392 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:20.893 DEBUG 287392 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:22.165 DEBUG 287392 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:22.200 DEBUG 287392 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:34.978 DEBUG 287392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:34.979 DEBUG 287392 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:34.979  INFO 287392 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:34.983  INFO 287392 --- [http-nio-8080-exec-1] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:34.984 DEBUG 287392 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:34.984 DEBUG 287392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:35.013 DEBUG 287392 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:35.056 DEBUG 287392 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:35.099 DEBUG 287392 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:35.129 DEBUG 287392 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:37.425 DEBUG 287392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:37.426 DEBUG 287392 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:37.426  INFO 287392 --- [http-nio-8080-exec-3] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:37.429  INFO 287392 --- [http-nio-8080-exec-3] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:37.430 DEBUG 287392 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:37.431 DEBUG 287392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:37.457 DEBUG 287392 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:38.511 DEBUG 287392 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:38.545 DEBUG 287392 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:39.507 DEBUG 287392 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:41.396 DEBUG 287392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:41.396 DEBUG 287392 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:41.396  INFO 287392 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:41.401  INFO 287392 --- [http-nio-8080-exec-4] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:41.401 DEBUG 287392 --- [http-nio-8080-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:41.401 DEBUG 287392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:41.432 DEBUG 287392 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:41.477 DEBUG 287392 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:41.516 DEBUG 287392 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:41.544 DEBUG 287392 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:44.124 DEBUG 287392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:44.124 DEBUG 287392 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:44.124  INFO 287392 --- [http-nio-8080-exec-5] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:44.127  INFO 287392 --- [http-nio-8080-exec-5] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:44.127 DEBUG 287392 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:44.127 DEBUG 287392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:44.162 DEBUG 287392 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:44.224 DEBUG 287392 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:44.297 DEBUG 287392 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:44.641 DEBUG 287392 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:47.505 DEBUG 287392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:47.506 DEBUG 287392 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:47.506  INFO 287392 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:47.509  INFO 287392 --- [http-nio-8080-exec-6] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:47.509 DEBUG 287392 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:47.509 DEBUG 287392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:47.531 DEBUG 287392 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:47.563 DEBUG 287392 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:47.591 DEBUG 287392 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:47.928 DEBUG 287392 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:50.834 DEBUG 287392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:50.835 DEBUG 287392 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:50.835  INFO 287392 --- [http-nio-8080-exec-7] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:50.838  INFO 287392 --- [http-nio-8080-exec-7] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:50.838 DEBUG 287392 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:50.839 DEBUG 287392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:50.880 DEBUG 287392 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:51.565 DEBUG 287392 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:51.722 DEBUG 287392 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:51.755 ERROR 287392 --- [http-nio-8080-exec-7] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:17:51.757 DEBUG 287392 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:53.504 DEBUG 287392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:53.504 DEBUG 287392 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:53.505  INFO 287392 --- [http-nio-8080-exec-9] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:53.507  INFO 287392 --- [http-nio-8080-exec-9] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:53.508 DEBUG 287392 --- [http-nio-8080-exec-9] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:53.508 DEBUG 287392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:53.540 DEBUG 287392 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:53.578 DEBUG 287392 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:53.615 DEBUG 287392 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:53.643 ERROR 287392 --- [http-nio-8080-exec-9] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:17:53.647 DEBUG 287392 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:17:54.793 DEBUG 287392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:17:54.793 DEBUG 287392 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:17:54.793  INFO 287392 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:17:54.800  INFO 287392 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:17:54.801 DEBUG 287392 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:17:54.801 DEBUG 287392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:17:54.830 DEBUG 287392 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:17:54.869 DEBUG 287392 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:17:55.217 DEBUG 287392 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:17:55.251 ERROR 287392 --- [http-nio-8080-exec-2] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:17:55.252 DEBUG 287392 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:19:11.192 DEBUG 287392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:19:11.192 DEBUG 287392 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:19:11.192  INFO 287392 --- [http-nio-8080-exec-3] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:19:11.194  INFO 287392 --- [http-nio-8080-exec-3] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:19:11.195 DEBUG 287392 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:19:11.195 DEBUG 287392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:19:11.226 DEBUG 287392 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:19:11.272 DEBUG 287392 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:19:11.313 DEBUG 287392 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:19:11.340 ERROR 287392 --- [http-nio-8080-exec-3] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:19:11.341 DEBUG 287392 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:19:14.721 DEBUG 287392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:19:14.722 DEBUG 287392 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:19:14.722  INFO 287392 --- [http-nio-8080-exec-5] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:19:14.724  INFO 287392 --- [http-nio-8080-exec-5] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:19:14.725 DEBUG 287392 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:19:14.725 DEBUG 287392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:19:14.756 DEBUG 287392 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:19:14.802 DEBUG 287392 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:19:15.151 DEBUG 287392 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:19:15.178 DEBUG 287392 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:19:20.490 DEBUG 287392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:19:20.490 DEBUG 287392 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:19:20.490  INFO 287392 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:19:20.493  INFO 287392 --- [http-nio-8080-exec-6] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:19:20.493 DEBUG 287392 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:19:20.494 DEBUG 287392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:19:20.527 DEBUG 287392 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:19:20.917 DEBUG 287392 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:19:20.966 DEBUG 287392 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:19:20.997 ERROR 287392 --- [http-nio-8080-exec-6] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:19:20.998 DEBUG 287392 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:20:26.339  INFO 287392 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:20:26.342  INFO 287392 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 16:20:26.346  INFO 287392 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 16:20:30.318  INFO 286832 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 286832 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 16:20:30.320  INFO 286832 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 16:20:30.359  INFO 286832 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 16:20:30.359  INFO 286832 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 16:20:31.182  INFO 286832 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:20:31.182  INFO 286832 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 16:20:31.282  INFO 286832 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 92 ms. Found 5 JPA repository interfaces.
2023-04-06 16:20:31.294  INFO 286832 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:20:31.295  INFO 286832 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 16:20:31.318  INFO 286832 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:20:31.319  INFO 286832 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:20:31.319  INFO 286832 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:20:31.319  INFO 286832 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:20:31.319  INFO 286832 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:20:31.320  INFO 286832 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2023-04-06 16:20:31.591  INFO 286832 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#78e58c2e' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:20:31.593  INFO 286832 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#783a4c7f' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:20:31.598  INFO 286832 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#78c6b0c0' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:20:31.600  INFO 286832 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:20:31.600  INFO 286832 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:20:31.868  INFO 286832 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 16:20:31.875  INFO 286832 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 16:20:31.875  INFO 286832 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 16:20:31.971  INFO 286832 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 16:20:31.971  INFO 286832 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1612 ms
2023-04-06 16:20:32.134  INFO 286832 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 16:20:32.173  INFO 286832 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 16:20:32.292  INFO 286832 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 16:20:32.383  INFO 286832 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 16:20:32.587  INFO 286832 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 16:20:32.597  INFO 286832 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 16:20:33.285  INFO 286832 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 16:20:33.297  INFO 286832 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:20:33.800  WARN 286832 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 16:20:34.586  WARN 286832 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:20:34.587  INFO 286832 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 16:20:34.588  WARN 286832 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:20:34.588  INFO 286832 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 16:20:34.588  WARN 286832 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:20:34.588  INFO 286832 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 16:20:34.625 DEBUG 286832 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 16:20:34.632 DEBUG 286832 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 16:20:34.644  INFO 286832 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@487afba8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ee3db69, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c7ea827, org.springframework.security.web.header.HeaderWriterFilter@3c6bc51, org.springframework.security.web.authentication.logout.LogoutFilter@58936b44, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@47a80557, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3294b6b4, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@75f6a991, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@514f6e5e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4860597, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5925e0d6, org.springframework.security.web.session.SessionManagementFilter@4275ba23, org.springframework.security.web.access.ExceptionTranslationFilter@7db5a6cf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@28bea3b8]
2023-04-06 16:20:34.721  INFO 286832 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 16:20:34.987  INFO 286832 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 16:20:35.191  INFO 286832 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 5.321 seconds (JVM running for 6.491)
2023-04-06 16:20:38.091  INFO 286832 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 16:20:38.093  INFO 286832 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 16:20:38.094  INFO 286832 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-04-06 16:20:38.100 DEBUG 286832 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:20:38.105 DEBUG 286832 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:20:38.106  INFO 286832 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:20:38.139  INFO 286832 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:20:38.151 DEBUG 286832 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:20:38.151 DEBUG 286832 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:20:38.250 DEBUG 286832 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:20:38.304 DEBUG 286832 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:20:38.691 DEBUG 286832 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:20:38.759 DEBUG 286832 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:20:44.274 DEBUG 286832 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:20:44.274 DEBUG 286832 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:20:44.274  INFO 286832 --- [http-nio-8080-exec-3] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:20:44.278  INFO 286832 --- [http-nio-8080-exec-3] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:20:44.278 DEBUG 286832 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:20:44.278 DEBUG 286832 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:20:44.306 DEBUG 286832 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:20:44.348 DEBUG 286832 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:20:44.386 DEBUG 286832 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:20:44.415 DEBUG 286832 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:20:48.320 DEBUG 286832 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:20:48.321 DEBUG 286832 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:20:48.321  INFO 286832 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:20:48.325  INFO 286832 --- [http-nio-8080-exec-4] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:20:48.325 DEBUG 286832 --- [http-nio-8080-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:20:48.325 DEBUG 286832 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:20:48.363 DEBUG 286832 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:20:48.715 DEBUG 286832 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:20:48.745 DEBUG 286832 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:20:48.820 DEBUG 286832 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:20:53.595 DEBUG 286832 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:20:53.595 DEBUG 286832 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:20:53.596  INFO 286832 --- [http-nio-8080-exec-5] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:20:53.605  INFO 286832 --- [http-nio-8080-exec-5] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:20:53.606 DEBUG 286832 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:20:53.606 DEBUG 286832 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:20:53.945 DEBUG 286832 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:20:54.596 DEBUG 286832 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:20:54.636 DEBUG 286832 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:20:54.662 DEBUG 286832 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:20:59.162 DEBUG 286832 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:20:59.163 DEBUG 286832 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:20:59.163  INFO 286832 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:20:59.166  INFO 286832 --- [http-nio-8080-exec-6] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:20:59.166 DEBUG 286832 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:20:59.166 DEBUG 286832 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:20:59.297 DEBUG 286832 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:20:59.442 DEBUG 286832 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:20:59.533 DEBUG 286832 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:20:59.573 DEBUG 286832 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:21:03.701 DEBUG 286832 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:21:03.702 DEBUG 286832 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:21:03.702  INFO 286832 --- [http-nio-8080-exec-7] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:21:03.705  INFO 286832 --- [http-nio-8080-exec-7] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:21:03.706 DEBUG 286832 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:21:03.706 DEBUG 286832 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:21:03.822 DEBUG 286832 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:21:04.196 DEBUG 286832 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:21:04.236 DEBUG 286832 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:21:04.265 DEBUG 286832 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:21:14.478 DEBUG 286832 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 16:21:14.478 DEBUG 286832 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:21:14.478  INFO 286832 --- [http-nio-8080-exec-8] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:21:14.480  INFO 286832 --- [http-nio-8080-exec-8] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:21:14.481 DEBUG 286832 --- [http-nio-8080-exec-8] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 16:21:14.481 DEBUG 286832 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 16:21:14.507 DEBUG 286832 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:21:14.522 DEBUG 286832 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 16:21:14.547 DEBUG 286832 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:21:14.564 DEBUG 286832 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 16:21:14.610 ERROR 286832 --- [http-nio-8080-exec-8] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:21:14.614 DEBUG 286832 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:21:49.208  INFO 286832 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:21:49.213  INFO 286832 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown initiated...
2023-04-06 16:21:49.224  INFO 286832 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Shutdown completed.
2023-04-06 16:21:53.542  INFO 285184 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Starting FinedUiApplication using Java 11.0.18 on DESKTOP-DOGVPUB with PID 285184 (C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI\build\classes\java\main started by SSAFY in C:\Users\SSAFY\AJH\FinedUI\S08P22A108\Backend\finedUI)
2023-04-06 16:21:53.543  INFO 285184 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : The following 3 profiles are active: "oauth2", "redis", "sms"
2023-04-06 16:21:53.576  INFO 285184 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-06 16:21:53.577  INFO 285184 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-06 16:21:54.338  INFO 285184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:21:54.339  INFO 285184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-06 16:21:54.448  INFO 285184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 102 ms. Found 5 JPA repository interfaces.
2023-04-06 16:21:54.459  INFO 285184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-06 16:21:54.460  INFO 285184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-06 16:21:54.483  INFO 285184 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.chatImage.ChatImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:21:54.483  INFO 285184 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.notice.NoticeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:21:54.484  INFO 285184 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.registInfo.RegistInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:21:54.484  INFO 285184 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.social.SocialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:21:54.484  INFO 285184 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssafy.finedUi.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-04-06 16:21:54.485  INFO 285184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2023-04-06 16:21:54.764  INFO 285184 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#51aa210f' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:21:54.765  INFO 285184 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#79286b0f' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:21:54.770  INFO 285184 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean '(inner bean)#2f2af8e0' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:21:54.772  INFO 285184 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:21:54.772  INFO 285184 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-06 16:21:54.980  INFO 285184 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-04-06 16:21:54.988  INFO 285184 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-04-06 16:21:54.988  INFO 285184 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-04-06 16:21:55.070  INFO 285184 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-04-06 16:21:55.070  INFO 285184 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1492 ms
2023-04-06 16:21:55.200  INFO 285184 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-06 16:21:55.230  INFO 285184 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-04-06 16:21:55.321  INFO 285184 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-06 16:21:55.388  INFO 285184 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Starting...
2023-04-06 16:21:56.299  INFO 285184 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : fined&youHikariPool - Start completed.
2023-04-06 16:21:56.308  INFO 285184 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2023-04-06 16:21:57.320  INFO 285184 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-06 16:21:57.329  INFO 285184 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-06 16:21:57.757  WARN 285184 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-06 16:21:58.437  WARN 285184 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:21:58.437  INFO 285184 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs']
2023-04-06 16:21:58.437  WARN 285184 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:21:58.437  INFO 285184 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger*/**']
2023-04-06 16:21:58.438  WARN 285184 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/error']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-04-06 16:21:58.438  INFO 285184 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/error']
2023-04-06 16:21:58.464 DEBUG 285184 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/**']
2023-04-06 16:21:58.469 DEBUG 285184 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2023-04-06 16:21:58.476  INFO 285184 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4e141b9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2a7040cd, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f4c50c0, org.springframework.security.web.header.HeaderWriterFilter@6bd3a70c, org.springframework.security.web.authentication.logout.LogoutFilter@72ea818e, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@5310c509, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3170062e, com.ssafy.finedUi.common.jwt.JwtTokenAuthenticationFilter@2bd7766f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75f3285a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ce9024, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c44eec2, org.springframework.security.web.session.SessionManagementFilter@9978930, org.springframework.security.web.access.ExceptionTranslationFilter@38841a04, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@136957d8]
2023-04-06 16:21:58.535  INFO 285184 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-04-06 16:21:58.758  INFO 285184 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-04-06 16:21:58.936  INFO 285184 --- [restartedMain] com.ssafy.finedUi.FinedUiApplication     : Started FinedUiApplication in 5.745 seconds (JVM running for 6.707)
2023-04-06 16:22:01.029  INFO 285184 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-06 16:22:01.031  INFO 285184 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-04-06 16:22:01.033  INFO 285184 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2023-04-06 16:22:01.041 DEBUG 285184 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 16:22:01.046 DEBUG 285184 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:22:01.047  INFO 285184 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:22:01.085  INFO 285184 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:22:01.096 DEBUG 285184 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 16:22:01.097 DEBUG 285184 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 16:22:01.359 DEBUG 285184 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:22:01.404 DEBUG 285184 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 16:22:01.435 DEBUG 285184 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:22:01.464 DEBUG 285184 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 16:22:01.843 DEBUG 285184 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:22:11.548 DEBUG 285184 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 16:22:11.550 DEBUG 285184 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:22:11.550  INFO 285184 --- [http-nio-8080-exec-3] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:22:11.553  INFO 285184 --- [http-nio-8080-exec-3] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:22:11.553 DEBUG 285184 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 16:22:11.554 DEBUG 285184 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 16:22:11.842 DEBUG 285184 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:22:11.956 DEBUG 285184 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 16:22:12.008 DEBUG 285184 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:22:12.021 DEBUG 285184 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 16:22:12.446 DEBUG 285184 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:22:17.177 DEBUG 285184 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/regist
2023-04-06 16:22:17.177 DEBUG 285184 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:22:17.177  INFO 285184 --- [http-nio-8080-exec-7] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:22:17.180  INFO 285184 --- [http-nio-8080-exec-7] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:22:17.181 DEBUG 285184 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/regist] with attributes [permitAll]
2023-04-06 16:22:17.181 DEBUG 285184 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/regist
2023-04-06 16:22:17.201 DEBUG 285184 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:22:17.210 DEBUG 285184 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_
2023-04-06 16:22:17.231 DEBUG 285184 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:22:17.246 DEBUG 285184 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        regist_info
        (birth_date, create_date, description, front_image_path, gender, is_missing, latitude, longitude, missing_time, name, other_image_1_path, other_image_2_path, update_date, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-04-06 16:22:17.275 DEBUG 285184 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:22:32.661 DEBUG 285184 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:22:32.661 DEBUG 285184 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:22:32.662  INFO 285184 --- [http-nio-8080-exec-8] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:22:32.665  INFO 285184 --- [http-nio-8080-exec-8] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:22:32.665 DEBUG 285184 --- [http-nio-8080-exec-8] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/detail] with attributes [permitAll]
2023-04-06 16:22:32.665 DEBUG 285184 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/detail
2023-04-06 16:22:32.689 DEBUG 285184 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:22:32.714 ERROR 285184 --- [http-nio-8080-exec-8] c.s.finedUi.common.advice.ErrorAdvice    : java.lang.NullPointerException
2023-04-06 16:22:32.718 DEBUG 285184 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:23:12.528 DEBUG 285184 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing PUT /api/regist
2023-04-06 16:23:12.528 DEBUG 285184 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:23:12.528  INFO 285184 --- [http-nio-8080-exec-5] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:23:12.531  INFO 285184 --- [http-nio-8080-exec-5] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:23:12.531 DEBUG 285184 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/regist] with attributes [permitAll]
2023-04-06 16:23:12.531 DEBUG 285184 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured PUT /api/regist
2023-04-06 16:23:12.568 DEBUG 285184 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:23:12.916 DEBUG 285184 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:23:12.968 DEBUG 285184 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:23:13.008 DEBUG 285184 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:23:19.058 DEBUG 285184 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:23:19.058 DEBUG 285184 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:23:19.058  INFO 285184 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:23:19.061  INFO 285184 --- [http-nio-8080-exec-4] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:23:19.061 DEBUG 285184 --- [http-nio-8080-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/detail] with attributes [permitAll]
2023-04-06 16:23:19.061 DEBUG 285184 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/detail
2023-04-06 16:23:19.081 DEBUG 285184 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:23:19.110 DEBUG 285184 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:23:42.865 DEBUG 285184 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/detail
2023-04-06 16:23:42.865 DEBUG 285184 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:23:42.865  INFO 285184 --- [http-nio-8080-exec-9] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:23:42.867  INFO 285184 --- [http-nio-8080-exec-9] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:23:42.868 DEBUG 285184 --- [http-nio-8080-exec-9] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/detail] with attributes [permitAll]
2023-04-06 16:23:42.868 DEBUG 285184 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/detail
2023-04-06 16:23:42.914 DEBUG 285184 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:23:42.988 DEBUG 285184 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:23:46.373 DEBUG 285184 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/regist
2023-04-06 16:23:46.373 DEBUG 285184 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:23:46.373  INFO 285184 --- [http-nio-8080-exec-10] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:23:46.377  INFO 285184 --- [http-nio-8080-exec-10] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:23:46.377 DEBUG 285184 --- [http-nio-8080-exec-10] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist] with attributes [permitAll]
2023-04-06 16:23:46.377 DEBUG 285184 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/regist
2023-04-06 16:23:46.411 DEBUG 285184 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_ 
    where
        registinfo0_.is_missing=1
2023-04-06 16:23:46.452 DEBUG 285184 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:23:46.465 DEBUG 285184 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:23:46.496 DEBUG 285184 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:24:03.304 DEBUG 285184 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/user
2023-04-06 16:24:03.305 DEBUG 285184 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:24:03.305  INFO 285184 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:24:03.309  INFO 285184 --- [http-nio-8080-exec-1] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:24:03.309 DEBUG 285184 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/user] with attributes [permitAll]
2023-04-06 16:24:03.309 DEBUG 285184 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/user
2023-04-06 16:24:03.310  INFO 285184 --- [http-nio-8080-exec-1] c.s.f.r.get.RegistInfoGetController      : getallbyuser
2023-04-06 16:24:03.335 DEBUG 285184 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    where
        user1_.user_id=?
2023-04-06 16:24:03.342 DEBUG 285184 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:24:03.362 DEBUG 285184 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:24:10.897 DEBUG 285184 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/isMissing
2023-04-06 16:24:10.897 DEBUG 285184 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:24:10.897  INFO 285184 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:24:10.900  INFO 285184 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:24:10.900 DEBUG 285184 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/isMissing] with attributes [permitAll]
2023-04-06 16:24:10.900 DEBUG 285184 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/isMissing
2023-04-06 16:24:11.018 DEBUG 285184 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_ 
    where
        registinfo0_.user_id=? 
        and registinfo0_.is_missing=?
2023-04-06 16:24:11.341 DEBUG 285184 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:24:11.363 DEBUG 285184 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:24:19.752 DEBUG 285184 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/isMissing
2023-04-06 16:24:19.752 DEBUG 285184 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:24:19.752  INFO 285184 --- [http-nio-8080-exec-3] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:24:19.755  INFO 285184 --- [http-nio-8080-exec-3] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:24:19.755 DEBUG 285184 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/isMissing] with attributes [permitAll]
2023-04-06 16:24:19.755 DEBUG 285184 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/isMissing
2023-04-06 16:24:19.774 DEBUG 285184 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_ 
    where
        registinfo0_.user_id=? 
        and registinfo0_.is_missing=?
2023-04-06 16:24:19.783 DEBUG 285184 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:24:19.808 DEBUG 285184 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:24:23.253 DEBUG 285184 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/isMissing
2023-04-06 16:24:23.253 DEBUG 285184 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:24:23.253  INFO 285184 --- [http-nio-8080-exec-7] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:24:23.256  INFO 285184 --- [http-nio-8080-exec-7] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:24:23.257 DEBUG 285184 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/isMissing] with attributes [permitAll]
2023-04-06 16:24:23.257 DEBUG 285184 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/isMissing
2023-04-06 16:24:23.275 DEBUG 285184 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_ 
    where
        registinfo0_.user_id=? 
        and registinfo0_.is_missing=?
2023-04-06 16:24:23.286 DEBUG 285184 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:24:23.324 DEBUG 285184 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:24:27.251 DEBUG 285184 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/distance
2023-04-06 16:24:27.252 DEBUG 285184 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:24:27.253  INFO 285184 --- [http-nio-8080-exec-8] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:24:27.256  INFO 285184 --- [http-nio-8080-exec-8] c.s.f.c.j.JwtTokenAuthenticationFilter   : 만료된 access jwt 토큰입니다
2023-04-06 16:24:27.257  INFO 285184 --- [http-nio-8080-exec-8] c.s.f.c.j.JwtTokenAuthenticationFilter   : refresh 토큰 : null
2023-04-06 16:24:27.261 DEBUG 285184 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:24:30.804 DEBUG 285184 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/regist/distance
2023-04-06 16:24:30.804 DEBUG 285184 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:24:30.806  INFO 285184 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:24:30.809  INFO 285184 --- [http-nio-8080-exec-6] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:24:30.810 DEBUG 285184 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/regist/distance] with attributes [permitAll]
2023-04-06 16:24:30.810 DEBUG 285184 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/regist/distance
2023-04-06 16:24:30.829 DEBUG 285184 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_,
        registinfo0_.birth_date as birth_da2_2_,
        registinfo0_.create_date as create_d3_2_,
        registinfo0_.description as descript4_2_,
        registinfo0_.front_image_path as front_im5_2_,
        registinfo0_.gender as gender6_2_,
        registinfo0_.is_missing as is_missi7_2_,
        registinfo0_.latitude as latitude8_2_,
        registinfo0_.longitude as longitud9_2_,
        registinfo0_.missing_time as missing10_2_,
        registinfo0_.name as name11_2_,
        registinfo0_.other_image_1_path as other_i12_2_,
        registinfo0_.other_image_2_path as other_i13_2_,
        registinfo0_.update_date as update_14_2_,
        registinfo0_.user_id as user_id15_2_ 
    from
        regist_info registinfo0_ 
    where
        registinfo0_.is_missing=1
2023-04-06 16:24:30.844 DEBUG 285184 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:24:30.851 DEBUG 285184 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.address as address2_4_0_,
        user0_.email as email3_4_0_,
        user0_.is_admin as is_admin4_4_0_,
        user0_.join_date as join_dat5_4_0_,
        user0_.name as name6_4_0_,
        user0_.password as password7_4_0_,
        user0_.phone_number as phone_nu8_4_0_,
        user0_.social_id as social_i9_4_0_,
        social1_.id as id1_3_1_,
        social1_.provider as provider2_3_1_ 
    from
        user user0_ 
    left outer join
        social social1_ 
            on user0_.social_id=social1_.id 
    where
        user0_.user_id=?
2023-04-06 16:24:30.877 DEBUG 285184 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:25:09.939 DEBUG 285184 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing PATCH /api/regist
2023-04-06 16:25:09.940 DEBUG 285184 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:25:09.940  INFO 285184 --- [http-nio-8080-exec-5] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:25:09.943  INFO 285184 --- [http-nio-8080-exec-5] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:25:09.944 DEBUG 285184 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PATCH /api/regist] with attributes [permitAll]
2023-04-06 16:25:09.944 DEBUG 285184 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured PATCH /api/regist
2023-04-06 16:25:09.970 DEBUG 285184 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:25:10.027 DEBUG 285184 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:25:10.051 DEBUG 285184 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:25:13.962 DEBUG 285184 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing PATCH /api/regist
2023-04-06 16:25:13.963 DEBUG 285184 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:25:13.963  INFO 285184 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:25:13.966  INFO 285184 --- [http-nio-8080-exec-4] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:25:13.966 DEBUG 285184 --- [http-nio-8080-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PATCH /api/regist] with attributes [permitAll]
2023-04-06 16:25:13.966 DEBUG 285184 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured PATCH /api/regist
2023-04-06 16:25:13.987 DEBUG 285184 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:25:14.052 DEBUG 285184 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:25:14.076 DEBUG 285184 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:25:16.247 DEBUG 285184 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing PATCH /api/regist
2023-04-06 16:25:16.247 DEBUG 285184 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:25:16.247  INFO 285184 --- [http-nio-8080-exec-9] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:25:16.253  INFO 285184 --- [http-nio-8080-exec-9] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:25:16.254 DEBUG 285184 --- [http-nio-8080-exec-9] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PATCH /api/regist] with attributes [permitAll]
2023-04-06 16:25:16.254 DEBUG 285184 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured PATCH /api/regist
2023-04-06 16:25:16.278 DEBUG 285184 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:25:16.742 DEBUG 285184 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:25:16.766 DEBUG 285184 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:25:34.027 DEBUG 285184 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing PATCH /api/regist
2023-04-06 16:25:34.028 DEBUG 285184 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:25:34.028  INFO 285184 --- [http-nio-8080-exec-10] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:25:34.030  INFO 285184 --- [http-nio-8080-exec-10] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:25:34.030 DEBUG 285184 --- [http-nio-8080-exec-10] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PATCH /api/regist] with attributes [permitAll]
2023-04-06 16:25:34.030 DEBUG 285184 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured PATCH /api/regist
2023-04-06 16:25:34.060 DEBUG 285184 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:25:34.455 DEBUG 285184 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:25:34.478 DEBUG 285184 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:25:36.575 DEBUG 285184 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing PATCH /api/regist
2023-04-06 16:25:36.575 DEBUG 285184 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:25:36.575  INFO 285184 --- [http-nio-8080-exec-1] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:25:36.578  INFO 285184 --- [http-nio-8080-exec-1] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:25:36.578 DEBUG 285184 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PATCH /api/regist] with attributes [permitAll]
2023-04-06 16:25:36.578 DEBUG 285184 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured PATCH /api/regist
2023-04-06 16:25:36.598 DEBUG 285184 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:25:36.964 DEBUG 285184 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    update
        regist_info 
    set
        birth_date=?,
        create_date=?,
        description=?,
        front_image_path=?,
        gender=?,
        is_missing=?,
        latitude=?,
        longitude=?,
        missing_time=?,
        name=?,
        other_image_1_path=?,
        other_image_2_path=?,
        update_date=?,
        user_id=? 
    where
        regist_id=?
2023-04-06 16:25:36.991 DEBUG 285184 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:25:45.309 DEBUG 285184 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/chat/image
2023-04-06 16:25:45.309 DEBUG 285184 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:25:45.309  INFO 285184 --- [http-nio-8080-exec-2] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:25:45.312  INFO 285184 --- [http-nio-8080-exec-2] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:25:45.312 DEBUG 285184 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/chat/image] with attributes [permitAll]
2023-04-06 16:25:45.312 DEBUG 285184 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/chat/image
2023-04-06 16:25:45.863 DEBUG 285184 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:25:45.880 DEBUG 285184 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        chatimage0_.missing_id as missing_3_0_0_,
        chatimage0_.user_id as user_id2_0_0_,
        chatimage0_.image_path as image_pa1_0_0_ 
    from
        chat_image chatimage0_ 
    where
        chatimage0_.missing_id=? 
        and chatimage0_.user_id=?
2023-04-06 16:25:45.889 DEBUG 285184 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        chat_image
        (image_path, missing_id, user_id) 
    values
        (?, ?, ?)
2023-04-06 16:25:45.912 DEBUG 285184 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:25:52.304 DEBUG 285184 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/chat/image/chat
2023-04-06 16:25:52.304 DEBUG 285184 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:25:52.304  INFO 285184 --- [http-nio-8080-exec-3] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:25:52.305 DEBUG 285184 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2023-04-06 16:25:52.305 DEBUG 285184 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/chat/image/chat] with attributes [permitAll]
2023-04-06 16:25:52.305 DEBUG 285184 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/chat/image/chat
2023-04-06 16:25:52.331 DEBUG 285184 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        chatimage0_.missing_id as missing_3_0_,
        chatimage0_.user_id as user_id2_0_,
        chatimage0_.image_path as image_pa1_0_ 
    from
        chat_image chatimage0_ 
    left outer join
        regist_info registinfo1_ 
            on chatimage0_.missing_id=registinfo1_.regist_id 
    where
        registinfo1_.regist_id=?
2023-04-06 16:25:52.338 DEBUG 285184 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:25:52.362 DEBUG 285184 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:25:56.354 DEBUG 285184 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/chat/image/user
2023-04-06 16:25:56.354 DEBUG 285184 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:25:56.355  INFO 285184 --- [http-nio-8080-exec-7] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:25:56.357  INFO 285184 --- [http-nio-8080-exec-7] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:25:56.358 DEBUG 285184 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /api/chat/image/user] with attributes [permitAll]
2023-04-06 16:25:56.358 DEBUG 285184 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/chat/image/user
2023-04-06 16:25:56.376 DEBUG 285184 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        chatimage0_.missing_id as missing_3_0_,
        chatimage0_.user_id as user_id2_0_,
        chatimage0_.image_path as image_pa1_0_ 
    from
        chat_image chatimage0_ 
    left outer join
        user user1_ 
            on chatimage0_.user_id=user1_.user_id 
    where
        user1_.user_id=?
2023-04-06 16:25:56.603 DEBUG 285184 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:25:56.946 DEBUG 285184 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:26:03.445 DEBUG 285184 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing PUT /api/chat/image
2023-04-06 16:26:03.445 DEBUG 285184 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:26:03.445  INFO 285184 --- [http-nio-8080-exec-8] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:26:03.447  INFO 285184 --- [http-nio-8080-exec-8] c.s.f.c.j.JwtTokenAuthenticationFilter   : 만료된 access jwt 토큰입니다
2023-04-06 16:26:03.447  INFO 285184 --- [http-nio-8080-exec-8] c.s.f.c.j.JwtTokenAuthenticationFilter   : refresh 토큰 : null
2023-04-06 16:26:03.447 DEBUG 285184 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:26:07.005 DEBUG 285184 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing PUT /api/chat/image
2023-04-06 16:26:07.006 DEBUG 285184 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:26:07.006  INFO 285184 --- [http-nio-8080-exec-6] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:26:07.009  INFO 285184 --- [http-nio-8080-exec-6] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:26:07.010 DEBUG 285184 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [PUT /api/chat/image] with attributes [permitAll]
2023-04-06 16:26:07.011 DEBUG 285184 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured PUT /api/chat/image
2023-04-06 16:26:07.163 DEBUG 285184 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:26:07.391 DEBUG 285184 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        chatimage0_.missing_id as missing_3_0_0_,
        chatimage0_.user_id as user_id2_0_0_,
        chatimage0_.image_path as image_pa1_0_0_ 
    from
        chat_image chatimage0_ 
    where
        chatimage0_.missing_id=? 
        and chatimage0_.user_id=?
2023-04-06 16:26:07.416 DEBUG 285184 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:26:28.050 DEBUG 285184 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/chat/image
2023-04-06 16:26:28.050 DEBUG 285184 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:26:28.050  INFO 285184 --- [http-nio-8080-exec-5] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:26:28.053  INFO 285184 --- [http-nio-8080-exec-5] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:26:28.054 DEBUG 285184 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/chat/image] with attributes [permitAll]
2023-04-06 16:26:28.054 DEBUG 285184 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/chat/image
2023-04-06 16:26:28.198 DEBUG 285184 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:26:28.206 DEBUG 285184 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        chatimage0_.missing_id as missing_3_0_0_,
        chatimage0_.user_id as user_id2_0_0_,
        chatimage0_.image_path as image_pa1_0_0_ 
    from
        chat_image chatimage0_ 
    where
        chatimage0_.missing_id=? 
        and chatimage0_.user_id=?
2023-04-06 16:26:28.226 DEBUG 285184 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2023-04-06 16:26:30.252 DEBUG 285184 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/chat/image
2023-04-06 16:26:30.253 DEBUG 285184 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2023-04-06 16:26:30.253  INFO 285184 --- [http-nio-8080-exec-4] c.s.f.c.j.JwtTokenAuthenticationFilter   : jwtFilter 진입 : ----------------------
2023-04-06 16:26:30.256  INFO 285184 --- [http-nio-8080-exec-4] c.s.finedUi.common.jwt.TokenProvider     : token에서 id 갖고오기 : 3
2023-04-06 16:26:30.256 DEBUG 285184 --- [http-nio-8080-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /api/chat/image] with attributes [permitAll]
2023-04-06 16:26:30.256 DEBUG 285184 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/chat/image
2023-04-06 16:26:30.304 DEBUG 285184 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        registinfo0_.regist_id as regist_i1_2_0_,
        registinfo0_.birth_date as birth_da2_2_0_,
        registinfo0_.create_date as create_d3_2_0_,
        registinfo0_.description as descript4_2_0_,
        registinfo0_.front_image_path as front_im5_2_0_,
        registinfo0_.gender as gender6_2_0_,
        registinfo0_.is_missing as is_missi7_2_0_,
        registinfo0_.latitude as latitude8_2_0_,
        registinfo0_.longitude as longitud9_2_0_,
        registinfo0_.missing_time as missing10_2_0_,
        registinfo0_.name as name11_2_0_,
        registinfo0_.other_image_1_path as other_i12_2_0_,
        registinfo0_.other_image_2_path as other_i13_2_0_,
        registinfo0_.update_date as update_14_2_0_,
        registinfo0_.user_id as user_id15_2_0_,
        user1_.user_id as user_id1_4_1_,
        user1_.address as address2_4_1_,
        user1_.email as email3_4_1_,
        user1_.is_admin as is_admin4_4_1_,
        user1_.join_date as join_dat5_4_1_,
        user1_.name as name6_4_1_,
        user1_.password as password7_4_1_,
        user1_.phone_number as phone_nu8_4_1_,
        user1_.social_id as social_i9_4_1_,
        social2_.id as id1_3_2_,
        social2_.provider as provider2_3_2_ 
    from
        regist_info registinfo0_ 
    left outer join
        user user1_ 
            on registinfo0_.user_id=user1_.user_id 
    left outer join
        social social2_ 
            on user1_.social_id=social2_.id 
    where
        registinfo0_.regist_id=?
2023-04-06 16:26:30.531 DEBUG 285184 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        chatimage0_.missing_id as missing_3_0_0_,
        chatimage0_.user_id as user_id2_0_0_,
        chatimage0_.image_path as image_pa1_0_0_ 
    from
        chat_image chatimage0_ 
    where
        chatimage0_.missing_id=? 
        and chatimage0_.user_id=?
2023-04-06 16:26:30.552 DEBUG 285184 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
